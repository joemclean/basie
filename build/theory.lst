ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 4
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"theory.cpp"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED2Ev,"axG",%p
  19              		.align	1
  20              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED2Ev
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED2Ev:
  26              	.LVL0:
  27              	.LFB2465:
  28              		.file 1 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // <array> -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** /** @file include/array
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****  *  This is a Standard C++ Library header.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****  */
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #ifndef _GLIBCXX_ARRAY
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #define _GLIBCXX_ARRAY 1
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 2


  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #pragma GCC system_header
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #if __cplusplus < 201103L
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** # include <bits/c++0x_warning.h>
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #else
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #include <utility>
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #include <bits/functexcept.h>
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #include <bits/stl_algobase.h>
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** #include <bits/range_access.h>
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** namespace std _GLIBCXX_VISIBILITY(default)
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** {
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****     struct __array_traits
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****     {
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       typedef _Tp _Type[_Nm];
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       typedef __is_swappable<_Tp> _Is_swappable;
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       typedef __is_nothrow_swappable<_Tp> _Is_nothrow_swappable;
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       static constexpr _Tp&
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       _S_ref(const _Type& __t, std::size_t __n) noexcept
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp&>(__t[__n]); }
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       static constexpr _Tp*
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       _S_ptr(const _Type& __t) noexcept
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****       { return const_cast<_Tp*>(__t); }
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****     };
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****  template<typename _Tp>
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    struct __array_traits<_Tp, 0>
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    {
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      struct _Type { };
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      typedef true_type _Is_swappable;
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      typedef true_type _Is_nothrow_swappable;
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      static constexpr _Tp&
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      _S_ref(const _Type&, std::size_t) noexcept
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      { return *static_cast<_Tp*>(nullptr); }
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      static constexpr _Tp*
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      _S_ptr(const _Type&) noexcept
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****      { return nullptr; }
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    };
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array **** 
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****   /**
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  @brief A standard container for storing a fixed size sequence of elements.
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  @ingroup sequences
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  <a href="tables.html#66">reversible container</a>, and a
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  <a href="tables.html#67">sequence</a>.
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 3


  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  Sets support random access iterators.
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  @tparam  Tp  Type of element. Required to be a complete type.
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****    *  @tparam  Nm  Number of elements.
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****   */
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****   template<typename _Tp, std::size_t _Nm>
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/array ****     struct array
  29              		.loc 1 94 12 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 94 12 is_stmt 0 view .LVU1
  34 0000 38B5     		push	{r3, r4, r5, lr}
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 3, -16
  37              		.cfi_offset 4, -12
  38              		.cfi_offset 5, -8
  39              		.cfi_offset 14, -4
  40              		.loc 1 94 12 view .LVU2
  41 0002 0546     		mov	r5, r0
  42              	.LBB603:
  43 0004 00F59074 		add	r4, r0, #288
  44              	.LVL1:
  45              	.L3:
  46              		.loc 1 94 12 discriminator 6 view .LVU3
  47 0008 AC42     		cmp	r4, r5
  48 000a 04D0     		beq	.L2
  49              		.loc 1 94 12 discriminator 5 view .LVU4
  50 000c 183C     		subs	r4, r4, #24
  51              	.LVL2:
  52              	.LBB604:
  53              	.LBI604:
  54              		.file 2 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 4


  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****  */
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** //
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** //
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #pragma GCC system_header
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <debug/debug.h>
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #include <initializer_list>
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** # include <string_view>
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** {
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #ifdef __cpp_lib_is_constant_evaluated
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Support P1032R1 in C++20 (but not P0980R1 yet).
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201811L
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #elif __cplusplus >= 201703L
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** // Support P0426R1 changes to char_traits in C++17.
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** # define __cpp_lib_constexpr_string 201611L
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #elif __cplusplus > 201703L
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****   /**
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @ingroup strings
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @ingroup sequences
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 5


  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****    */
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     class basic_string
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     {
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Types:
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     public:
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef _Traits					traits_type;
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 							const_iterator;
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     protected:
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef iterator __const_iterator;
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     private:
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _Res>;
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static __sv_type
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return __svt; }
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 6


 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // is provided.
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       struct __sv_wrapper
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__sv_type _M_sv;
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       };
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *          wrapper.
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       explicit
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       };
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type		_M_string_length;
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       union
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       };
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_data(pointer __p)
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_length(size_type __length)
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       pointer
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_data() const
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 7


 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       pointer
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_local_data()
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return pointer(_M_local_buf);
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_pointer
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_local_data() const
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_set_length(size_type __n)
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_length(__n);
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       bool
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_is_local() const
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Create & Destroy
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       pointer
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_create(size_type&, size_type);
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_dispose()
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (!_M_is_local())
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InIterator>
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			 std::__false_type)
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 8


 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	}
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Integer>
 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__req, __c); }
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InIterator>
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         }
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InIterator>
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     std::input_iterator_tag);
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _FwdIterator>
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         void
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     std::forward_iterator_tag);
 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       allocator_type&
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_get_allocator()
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const allocator_type&
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_get_allocator() const
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     private:
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 9


 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__pos > this->size())
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				   __s, __pos, this->size());
 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return __pos;
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       bool
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n == 1)
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n == 1)
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 10


 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n == 1)
 375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 380:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 381:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 382:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<class _Iterator>
 383:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         static void
 384:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 385:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         {
 386:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 387:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 388:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	}
 389:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 390:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 391:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 392:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 393:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 394:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 395:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 396:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 397:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 398:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 399:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 400:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 401:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 402:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 403:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static void
 404:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 405:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 406:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 407:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 408:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       static int
 409:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 410:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 411:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 412:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 413:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 414:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 415:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 416:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 417:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 418:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return int(__d);
 419:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 420:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 421:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 422:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_assign(const basic_string&);
 423:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 11


 424:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 425:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 426:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		size_type __len2);
 427:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 428:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 429:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 430:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 431:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     public:
 432:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Construct/copy/destroy:
 433:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 434:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 435:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 436:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 437:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 438:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 439:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string()
 440:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 441:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 442:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 443:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 444:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 445:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 446:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 447:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       explicit
 448:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 449:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 450:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 451:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 452:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 453:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 454:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 455:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 456:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str)
 457:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 458:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 459:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 460:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 461:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 462:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 463:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 464:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 465:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 466:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 467:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 468:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 469:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 470:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 471:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 472:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 473:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 474:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 475:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
 476:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 477:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 478:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 479:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 480:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 12


 481:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 482:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 483:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 484:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 485:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   size_type __n)
 486:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 487:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 488:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 489:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 490:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 491:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 492:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 493:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 494:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 495:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 496:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 497:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 498:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 499:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 500:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 501:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 502:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 503:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 504:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __start
 505:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 506:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 507:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 508:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 509:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 510:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 511:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
 512:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 513:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 514:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 515:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 516:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  has no special meaning.
 517:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 518:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 519:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 520:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 521:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 522:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 523:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 524:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 525:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __s  Source C string.
 526:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 527:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 528:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 529:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 530:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 531:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 532:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 533:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 534:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 535:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 536:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const _CharT* __end = __s ? __s + traits_type::length(__s)
 537:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  // We just need a non-null pointer here to get an exception:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 13


 538:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  : reinterpret_cast<const _CharT*>(__alignof__(_CharT));
 539:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_construct(__s, __end, random_access_iterator_tag());
 540:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 541:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 542:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 543:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 544:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
 545:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __c  Character to use.
 546:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 547:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 548:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 549:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 550:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 551:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 552:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 553:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 554:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 555:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__n, __c); }
 556:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 557:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 558:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 559:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Move construct string.
 560:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 561:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 562:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 563:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 564:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        **/
 565:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 566:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 567:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 568:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 569:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 570:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 571:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 572:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 573:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 574:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 575:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 576:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 577:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 578:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 579:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 580:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 581:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 582:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_length(__str.length());
 583:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 584:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__str._M_set_length(0);
 585:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 586:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 587:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 588:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 589:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 590:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 591:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 592:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 593:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 594:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 14


 595:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 596:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 597:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 598:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 599:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 600:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 601:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 602:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 603:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 604:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 605:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 606:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 607:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 608:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 609:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 610:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 611:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 612:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 613:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 614:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 615:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 616:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 617:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 618:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 619:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 620:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else
 621:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 622:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 623:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 624:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
 625:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 626:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 627:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 628:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
 629:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __end  End of range.
 630:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 631:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 632:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 633:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InputIterator,
 634:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 635:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 636:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _InputIterator>
 637:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 638:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 639:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 640:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 641:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 642:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 643:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 644:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 645:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 646:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 647:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 648:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 649:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 650:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 651:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 15


 652:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 653:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 654:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 655:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 656:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 657:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 658:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 659:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 660:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 661:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 662:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	explicit
 663:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 664:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 665:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
 666:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 667:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 668:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 669:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ~basic_string()
  55              		.loc 2 670 7 is_stmt 1 discriminator 5 view .LVU5
  56              	.LBB605:
  57              	.LBB606:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
  58              		.loc 2 671 19 is_stmt 0 discriminator 5 view .LVU6
  59 000e 2046     		mov	r0, r4
  60 0010 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
  61              	.LVL3:
  62              	.LBB607:
  63              	.LBI607:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
  64              		.loc 2 158 14 is_stmt 1 discriminator 5 view .LVU7
  65              	.LBB608:
  66              	.LBI608:
  67              		.file 3 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 16


  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** /*
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  *
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  */
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** /** @file bits/allocator.h
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****  */
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #include <type_traits>
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** {
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   /**
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  @addtogroup allocators
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  @{
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    */
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // Since C++20 the primary template should be used for allocator<void>,
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // but then it would have a non-trivial default ctor and dtor, which
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // would be an ABI change. So C++20 still uses the allocator<void> explicit
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // specialization, with the historical ABI properties, but with the same
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   // members that are present in the primary template.
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if ! _GLIBCXX_INLINE_VERSION
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   /// allocator<void> specialization.
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   template<>
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     class allocator<void>
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     {
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     public:
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef void        value_type;
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef size_t      size_type;
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus <= 201703L
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // These were removed for C++20.
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 17


  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef void*       pointer;
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef const void* const_pointer;
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Tp1>
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	struct rebind
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus > 201703L
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator() = default;
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Up>
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	constexpr
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	allocator(const allocator<_Up>&) noexcept { }
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // No allocate member because it's ill-formed by LWG 3307.
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // No deallocate member because it would be undefined to call it
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // with any pointer which wasn't obtained from allocate.
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #else // ! C++20
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // allocator_traits<allocator<void>> uses construct and destroy.
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Up, typename... _Args>
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	void
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	noexcept(std::is_nothrow_constructible<_Up, _Args...>::value)
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Up>
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	void
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	destroy(_Up* __p)
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	noexcept(std::is_nothrow_destructible<_Up>::value)
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ __p->~_Up(); }
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif // C++17
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif // C++11
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     };
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif // ! _GLIBCXX_INLINE_VERSION
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   /**
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    * @brief  The @a standard allocator, as per C++03 [20.4.1].
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  for further details.
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****    */
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****   template<typename _Tp>
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     {
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****     public:
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef _Tp        value_type;
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 18


 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef size_t     size_type;
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus <= 201703L
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // These were removed for C++20.
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef _Tp*       pointer;
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef const _Tp* const_pointer;
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef _Tp&       reference;
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef const _Tp& const_reference;
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Tp1>
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	struct rebind
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       // Avoid implicit deprecation.
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       template<typename _Tp1>
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       constexpr
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** #endif
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
  68              		.loc 3 182 7 discriminator 5 view .LVU8
  69              	.LBB609:
  70              	.LBI609:
  71              		.file 4 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Copyright (C) 2001-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 19


   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****  */
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <bits/c++config.h>
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <new>
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <bits/move.h>
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #include <type_traits>
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** {
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****   /**
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per C++03 [20.4.1].
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  @ingroup allocators
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *    - all allocation calls operator new
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****    */
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****   template<typename _Tp>
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****     class new_allocator
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****     {
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****     public:
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef _Tp        value_type;
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef std::size_t     size_type;
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus <= 201703L
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef const _Tp& const_reference;
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 20


  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	struct rebind
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #endif
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** #if __cplusplus <= 201703L
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  72              		.loc 4 89 7 discriminator 5 view .LVU9
  73              		.loc 4 89 7 is_stmt 0 discriminator 5 view .LVU10
  74              	.LBE609:
  75              	.LBE608:
  76              	.LBE607:
  77              	.LBE606:
  78              		.loc 2 671 23 discriminator 5 view .LVU11
  79 0014 F8E7     		b	.L3
  80              	.LVL4:
  81              	.L2:
  82              		.loc 2 671 23 discriminator 5 view .LVU12
  83              	.LBE605:
  84              	.LBE604:
  85              	.LBE603:
  86              		.loc 1 94 12 discriminator 7 view .LVU13
  87 0016 2046     		mov	r0, r4
  88 0018 38BD     		pop	{r3, r4, r5, pc}
  89              		.loc 1 94 12 discriminator 7 view .LVU14
  90              		.cfi_endproc
  91              	.LFE2465:
  93              		.weak	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED1Ev
  94              		.thumb_set _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED1Ev,_ZNSt5arrayI
  95              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra
  96              	.LC13:
  97 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
  97      635F7374 
  97      72696E67 
  97      3A3A5F4D 
  97      5F636F6E 
  98              		.section	.text.startup._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.
  99              		.align	1
 100              		.syntax unified
 101              		.thumb
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 21


 102              		.thumb_func
 104              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:
 105              	.LVL5:
 106              	.LFB2472:
 533:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 107              		.loc 2 533 7 is_stmt 1 view -0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LBB639:
 112              	.LBI639:
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 113              		.loc 2 198 7 view .LVU16
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 114              		.loc 2 198 7 is_stmt 0 view .LVU17
 115              	.LBE639:
 116              	.LBB641:
 117              	.LBI641:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 118              		.loc 2 164 2 is_stmt 1 view .LVU18
 119              	.LBB642:
 120              	.LBB643:
 121              	.LBI643:
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 122              		.loc 3 167 7 view .LVU19
 123              	.LBB644:
 124              	.LBI644:
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 125              		.loc 4 82 7 view .LVU20
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 126              		.loc 4 82 7 is_stmt 0 view .LVU21
 127              	.LBE644:
 128              	.LBE643:
 129              	.LBE642:
 130              	.LBE641:
 131              	.LBB646:
 132              	.LBB640:
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 133              		.loc 2 201 51 view .LVU22
 134 0000 00F10803 		add	r3, r0, #8
 135              	.LBE640:
 136              	.LBE646:
 533:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 137              		.loc 2 533 7 view .LVU23
 138 0004 73B5     		push	{r0, r1, r4, r5, r6, lr}
 139              		.cfi_def_cfa_offset 24
 140              		.cfi_offset 4, -16
 141              		.cfi_offset 5, -12
 142              		.cfi_offset 6, -8
 143              		.cfi_offset 14, -4
 533:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 144              		.loc 2 533 7 view .LVU24
 145 0006 0446     		mov	r4, r0
 146              	.LBB647:
 536:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  // We just need a non-null pointer here to get an exception:
 147              		.loc 2 536 28 view .LVU25
 148 0008 0D46     		mov	r5, r1
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 22


 149              	.LBE647:
 150              	.LBB674:
 151              	.LBB645:
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 152              		.loc 2 165 35 view .LVU26
 153 000a 0360     		str	r3, [r0]
 154              	.LVL6:
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 155              		.loc 2 165 35 view .LVU27
 156              	.LBE645:
 157              	.LBE674:
 158              	.LBB675:
 536:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  // We just need a non-null pointer here to get an exception:
 159              		.loc 2 536 28 view .LVU28
 160 000c D9B1     		cbz	r1, .L5
 161              	.LVL7:
 162              	.LBB648:
 163              	.LBI648:
 164              		.file 5 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****  */
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** //
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** //
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #pragma GCC system_header
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 23


  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus > 201703L
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # include <compare>
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** {
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct _Char_types
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef unsigned long   int_type;
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef std::streampos  pos_type;
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef std::streamoff  off_type;
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     };
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    */
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct char_traits
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef _CharT                                    char_type;
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 24


  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cpp_lib_three_way_comparison
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       using comparison_category = std::strong_ordering;
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 < __c2; }
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       length(const char_type* __s);
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX20_CONSTEXPR char_type*
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       to_char_type(const int_type& __c)
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       to_int_type(const char_type& __c)
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eof()
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       not_eof(const int_type& __c)
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     };
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 25


 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return -1;
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return 1;
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return 0;
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     length(const char_type* __p)
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       std::size_t __i = 0;
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****         ++__i;
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __i;
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****         if (eq(__s[__i], __a))
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****           return __s + __i;
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return 0;
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       if (__n == 0)
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return __s1;
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       if (std::is_constant_evaluated())
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	{
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  if (__s1 > __s2 && __s1 < __s2 + __n)
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    std::copy_backward(__s2, __s2 + __n, __s1 + __n);
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  else
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    std::copy(__s2, __s2 + __n, __s1);
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __s1;
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	}
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 26


 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __s1;
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX20_CONSTEXPR
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __s;
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** } // namespace
 233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** {
 236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef __cpp_lib_is_constant_evaluated
 241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Unofficial macro indicating P1032R1 support in C++20
 242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # define __cpp_lib_constexpr_char_traits 201811L
 243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #else
 244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** // Unofficial macro indicating P0426R1 support in C++17
 245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** # define __cpp_lib_constexpr_char_traits 201611L
 246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
 249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  string are known at compile time.
 251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @param  __s  The string.
 252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    */
 255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX_ALWAYS_INLINE constexpr bool
 257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       (void) __s;
 261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #else
 264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	__s++;
 266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __builtin_constant_p(*__s);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 27


 267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
 271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  known at compile time.
 273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @param  __a  The character array.
 274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @param  __n  Number of characters.
 275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    */
 278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<typename _CharT>
 279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     _GLIBCXX_ALWAYS_INLINE constexpr bool
 280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       (void) __a;
 284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       (void) __n;
 285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #else
 288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       size_t __i = 0;
 289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	__i++;
 291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       return __i == __n;
 292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     }
 294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   // 21.1
 297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /**
 298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *
 305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   */
 309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<class _CharT>
 310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     { };
 312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****   template<>
 316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     struct char_traits<char>
 317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****     {
 318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef char              char_type;
 319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef int               int_type;
 320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef streampos         pos_type;
 321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef streamoff         off_type;
 322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       typedef mbstate_t         state_type;
 323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cpp_lib_three_way_comparison
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 28


 324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       using comparison_category = strong_ordering;
 325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	// LWG 467.
 339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__n == 0)
 347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return 0;
 348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  {
 353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    for (size_t __i = 0; __i < __n; ++__i)
 354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	      if (lt(__s1[__i], __s2[__i]))
 355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 		return -1;
 356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	      else if (lt(__s2[__i], __s1[__i]))
 357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 		return 1;
 358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	    return 0;
 359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  }
 360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       }
 363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       length(const char_type* __s)
 165              		.loc 5 365 7 is_stmt 1 view .LVU29
 166              	.LBB649:
 366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       {
 367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	if (__constant_string_p(__s))
 369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** #endif
 371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 	return __builtin_strlen(__s);
 167              		.loc 5 371 2 view .LVU30
 168              		.loc 5 371 25 is_stmt 0 view .LVU31
 169 000e 0846     		mov	r0, r1
 170              	.LVL8:
 171              		.loc 5 371 25 view .LVU32
 172 0010 FFF7FEFF 		bl	strlen
 173              	.LVL9:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 29


 174              		.loc 5 371 25 view .LVU33
 175              	.LBE649:
 176              	.LBE648:
 177              	.LBB650:
 178              	.LBB651:
 179              		.file 6 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Copyright (C) 1997-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****  */
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** //
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** //
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #pragma GCC system_header
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** {
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 30


  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     void
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     {
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (this == &__s)
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	return;
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (_M_is_local())
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		return;
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    else if (length())
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		return;
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	else
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       else
 106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	{
 107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  if (__s._M_is_local())
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 31


 109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    {
 110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    }
 115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  else
 116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    {
 117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    }
 122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	}
 124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     }
 129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     {
 135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	{
 145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	}
 150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       // null char_type() element.
 153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     }
 155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       void
 163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		   std::input_iterator_tag)
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 32


 166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       {
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    ++__beg;
 174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__try
 177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      {
 180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		  {
 182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    _M_dispose();
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		  }
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		++__beg;
 192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	      }
 193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__catch(...)
 195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       }
 202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       void
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       {
 210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 180              		.loc 6 217 2 view .LVU34
 181 0014 0F28     		cmp	r0, #15
 182              	.LBE651:
 183              	.LBE650:
 536:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  // We just need a non-null pointer here to get an exception:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 33


 184              		.loc 2 536 28 view .LVU35
 185 0016 05EB0006 		add	r6, r5, r0
 186              	.LVL10:
 187              	.LBB672:
 188              	.LBI650:
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 189              		.loc 6 206 7 is_stmt 1 view .LVU36
 190              	.LBB670:
 215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 191              		.loc 6 215 12 is_stmt 0 view .LVU37
 192 001a 0190     		str	r0, [sp, #4]
 193              		.loc 6 217 2 view .LVU38
 194 001c 07D9     		bls	.L6
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 195              		.loc 6 219 13 view .LVU39
 196 001e 0022     		movs	r2, #0
 197 0020 01A9     		add	r1, sp, #4
 198 0022 2046     		mov	r0, r4
 199 0024 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 200              	.LVL11:
 201              	.LBB652:
 202              	.LBI652:
 186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 203              		.loc 2 186 7 is_stmt 1 view .LVU40
 204              	.LBE652:
 205              	.LBB654:
 206              	.LBB655:
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 207              		.loc 2 219 31 is_stmt 0 view .LVU41
 208 0028 019B     		ldr	r3, [sp, #4]
 209              	.LBE655:
 210              	.LBE654:
 211              	.LBB657:
 212              	.LBB653:
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 213              		.loc 2 187 26 view .LVU42
 214 002a 2060     		str	r0, [r4]
 215              	.LVL12:
 187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 216              		.loc 2 187 26 view .LVU43
 217              	.LBE653:
 218              	.LBE657:
 219              	.LBB658:
 220              	.LBI654:
 218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 221              		.loc 2 218 7 is_stmt 1 view .LVU44
 222              	.LBB656:
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 223              		.loc 2 219 31 is_stmt 0 view .LVU45
 224 002c A360     		str	r3, [r4, #8]
 225              	.LVL13:
 226              	.L6:
 219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 227              		.loc 2 219 31 view .LVU46
 228              	.LBE656:
 229              	.LBE658:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 34


 230              	.LBB659:
 231              	.LBI659:
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 232              		.loc 2 194 7 is_stmt 1 view .LVU47
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 233              		.loc 2 194 7 is_stmt 0 view .LVU48
 234              	.LBE659:
 220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__try
 225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 235              		.loc 6 225 25 view .LVU49
 236 002e 3246     		mov	r2, r6
 237 0030 2946     		mov	r1, r5
 238 0032 2068     		ldr	r0, [r4]
 239 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
 240              	.LVL14:
 226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	__catch(...)
 227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  {
 228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	  }
 231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 
 232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 241              		.loc 6 232 15 view .LVU50
 242 0038 019B     		ldr	r3, [sp, #4]
 243              	.LVL15:
 244              	.LBB660:
 245              	.LBI660:
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 246              		.loc 2 222 7 is_stmt 1 view .LVU51
 247              	.LBB661:
 248              	.LBB662:
 249              	.LBI662:
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 250              		.loc 2 190 7 view .LVU52
 251              	.LBE662:
 252              	.LBB664:
 253              	.LBB665:
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 254              		.loc 5 329 14 is_stmt 0 view .LVU53
 255 003a 2268     		ldr	r2, [r4]
 256 003c 0021     		movs	r1, #0
 257              	.LBE665:
 258              	.LBE664:
 259              	.LBB667:
 260              	.LBB663:
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 261              		.loc 2 191 26 view .LVU54
 262 003e 6360     		str	r3, [r4, #4]
 263              	.LVL16:
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 264              		.loc 2 191 26 view .LVU55
 265              	.LBE663:
 266              	.LBE667:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 35


 267              	.LBB668:
 268              	.LBI668:
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 269              		.loc 2 194 7 is_stmt 1 view .LVU56
 194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 270              		.loc 2 194 7 is_stmt 0 view .LVU57
 271              	.LBE668:
 272              	.LBB669:
 273              	.LBI664:
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 274              		.loc 5 328 7 is_stmt 1 view .LVU58
 275              	.LBB666:
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 276              		.loc 5 329 9 view .LVU59
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 277              		.loc 5 329 14 is_stmt 0 view .LVU60
 278 0040 D154     		strb	r1, [r2, r3]
 279              	.LVL17:
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 280              		.loc 5 329 14 view .LVU61
 281              	.LBE666:
 282              	.LBE669:
 283              	.LBE661:
 284              	.LBE660:
 285              	.LBE670:
 286              	.LBE672:
 287              	.LBE675:
 540:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 288              		.loc 2 540 7 view .LVU62
 289 0042 02B0     		add	sp, sp, #8
 290              		.cfi_remember_state
 291              		.cfi_def_cfa_offset 16
 292              		@ sp needed
 293 0044 70BD     		pop	{r4, r5, r6, pc}
 294              	.LVL18:
 295              	.L5:
 296              		.cfi_restore_state
 297              	.LBB676:
 298              	.LBB673:
 206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 299              		.loc 6 206 7 is_stmt 1 view .LVU63
 300              	.LBB671:
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 301              		.loc 6 212 28 is_stmt 0 view .LVU64
 302 0046 0148     		ldr	r0, .L8
 303              	.LVL19:
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 304              		.loc 6 212 28 view .LVU65
 305 0048 FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 306              	.LVL20:
 307              	.L9:
 212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 308              		.loc 6 212 28 view .LVU66
 309              		.align	2
 310              	.L8:
 311 004c 00000000 		.word	.LC13
 312              	.LBE671:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 36


 313              	.LBE673:
 314              	.LBE676:
 315              		.cfi_endproc
 316              	.LFE2472:
 318              		.section	.text._ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_I
 319              		.align	1
 320              		.global	_ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 321              		.syntax unified
 322              		.thumb
 323              		.thumb_func
 325              	_ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE:
 326              	.LVL21:
 327              	.LFB1977:
 328              		.file 7 "src/theory.cpp"
   1:src/theory.cpp **** #include "theory.hpp"
   2:src/theory.cpp **** 
   3:src/theory.cpp **** #include <array>
   4:src/theory.cpp **** #include <string>
   5:src/theory.cpp **** #include <vector>
   6:src/theory.cpp **** 
   7:src/theory.cpp **** using std::array;
   8:src/theory.cpp **** using std::string;
   9:src/theory.cpp **** 
  10:src/theory.cpp **** // Define chords as half steps above root
  11:src/theory.cpp **** 
  12:src/theory.cpp **** Chord::Chord(array<int, 7> tones, string displayName, array<float, 12> chordScale)
 329              		.loc 7 12 1 is_stmt 1 view -0
 330              		.cfi_startproc
 331              		@ args = 84, pretend = 16, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333              	.LBB677:
 334              	.LBB678:
 335              	.LBI678:
 439:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 336              		.loc 2 439 7 view .LVU68
 337              	.LBB679:
 338              	.LBI679:
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 339              		.loc 2 198 7 view .LVU69
 198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 340              		.loc 2 198 7 is_stmt 0 view .LVU70
 341              	.LBE679:
 342              	.LBB681:
 343              	.LBI681:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 344              		.loc 3 164 7 is_stmt 1 view .LVU71
 345              	.LBB682:
 346              	.LBI682:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 347              		.loc 4 79 7 view .LVU72
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 348              		.loc 4 79 7 is_stmt 0 view .LVU73
 349              	.LBE682:
 350              	.LBE681:
 351              	.LBB683:
 352              	.LBI683:
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 37


 353              		.loc 2 167 2 is_stmt 1 view .LVU74
 354              	.LBB684:
 355              	.LBB685:
 356              	.LBI685:
 357              		.file 8 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h"
   1:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
   3:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // Copyright (C) 2007-2020 Free Software Foundation, Inc.
   4:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** //
   5:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // any later version.
  10:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  11:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // GNU General Public License for more details.
  15:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  16:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  20:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  25:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** /** @file bits/move.h
  26:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****  */
  29:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  30:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** #ifndef _MOVE_H
  31:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** #define _MOVE_H 1
  32:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  33:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** #include <bits/c++config.h>
  34:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** #if __cplusplus < 201103L
  35:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** # include <bits/concept_check.h>
  36:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** #endif
  37:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  38:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  39:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** {
  40:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  41:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  42:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  43:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   /**
  44:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @brief Same as C++11 std::addressof
  45:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @ingroup utilities
  46:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    */
  47:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   template<typename _Tp>
  48:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  49:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  50:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     { return __builtin_addressof(__r); }
  51:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  52:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** #if __cplusplus >= 201103L
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 38


  53:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  54:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  55:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** } // namespace
  56:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  57:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  58:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  59:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** {
  61:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  63:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   /**
  64:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @addtogroup utilities
  65:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @{
  66:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    */
  67:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  68:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   /**
  69:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @brief  Forward an lvalue.
  70:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  71:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *
  72:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  73:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    */
  74:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   template<typename _Tp>
  75:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     constexpr _Tp&&
  76:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  77:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  78:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   /**
  80:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @brief  Forward an rvalue.
  81:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *
  83:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  84:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    */
  85:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   template<typename _Tp>
  86:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     constexpr _Tp&&
  87:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  88:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     {
  89:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  90:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  91:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****       return static_cast<_Tp&&>(__t);
  92:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     }
  93:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h **** 
  94:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   /**
  95:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  96:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  97:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  98:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   */
  99:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****   template<typename _Tp>
 100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
 101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/move.h ****     move(_Tp&& __t) noexcept
 358              		.loc 8 101 5 view .LVU75
 359              		.loc 8 101 5 is_stmt 0 view .LVU76
 360              	.LBE685:
 361              	.LBB686:
 362              	.LBI686:
 167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 363              		.loc 3 167 7 is_stmt 1 view .LVU77
 364              	.LBB687:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 39


 365              	.LBI687:
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 366              		.loc 4 82 7 view .LVU78
  82:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 367              		.loc 4 82 7 is_stmt 0 view .LVU79
 368              	.LBE687:
 369              	.LBE686:
 370              	.LBE684:
 371              	.LBE683:
 372              	.LBE678:
 373              	.LBE677:
 374              		.loc 7 12 1 view .LVU80
 375 0000 84B0     		sub	sp, sp, #16
 376              		.cfi_def_cfa_offset 16
 377 0002 70B5     		push	{r4, r5, r6, lr}
 378              		.cfi_def_cfa_offset 32
 379              		.cfi_offset 4, -32
 380              		.cfi_offset 5, -28
 381              		.cfi_offset 6, -24
 382              		.cfi_offset 14, -20
 383              		.loc 7 12 1 view .LVU81
 384 0004 05AC     		add	r4, sp, #20
 385 0006 0646     		mov	r6, r0
 386              	.LBB707:
  13:src/theory.cpp **** {
  14:src/theory.cpp ****     this->tones = tones;
 387              		.loc 7 14 17 view .LVU82
 388 0008 0546     		mov	r5, r0
 389              	.LBE707:
  12:src/theory.cpp **** {
 390              		.loc 7 12 1 view .LVU83
 391 000a 84E80E00 		stm	r4, {r1, r2, r3}
 392              	.LBB708:
 393              	.LBB698:
 394              	.LBB689:
 395              	.LBB680:
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 396              		.loc 2 201 51 view .LVU84
 397 000e 00F12403 		add	r3, r0, #36
 398              	.LVL22:
 201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
 399              		.loc 2 201 51 view .LVU85
 400              	.LBE680:
 401              	.LBE689:
 402              	.LBB690:
 403              	.LBB688:
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 404              		.loc 2 168 46 view .LVU86
 405 0012 C361     		str	r3, [r0, #28]
 406              	.LVL23:
 168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 407              		.loc 2 168 46 view .LVU87
 408              	.LBE688:
 409              	.LBE690:
 410              	.LBB691:
 411              	.LBI691:
 412              		.loc 3 182 7 is_stmt 1 view .LVU88
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 40


 413              	.LBB692:
 414              	.LBI692:
 415              		.loc 4 89 7 view .LVU89
 416              		.loc 4 89 7 is_stmt 0 view .LVU90
 417              	.LBE692:
 418              	.LBE691:
 419              	.LBB693:
 420              	.LBI693:
 222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 421              		.loc 2 222 7 is_stmt 1 view .LVU91
 422              	.LBB694:
 423              	.LBI694:
 190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 424              		.loc 2 190 7 view .LVU92
 425              	.LBB695:
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 426              		.loc 2 191 26 is_stmt 0 view .LVU93
 427 0014 0023     		movs	r3, #0
 428 0016 0362     		str	r3, [r0, #32]
 429              	.LVL24:
 191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 430              		.loc 2 191 26 view .LVU94
 431              	.LBE695:
 432              	.LBE694:
 433              	.LBB696:
 434              	.LBI696:
 328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 435              		.loc 5 328 7 is_stmt 1 view .LVU95
 436              	.LBB697:
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 437              		.loc 5 329 9 view .LVU96
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 438              		.loc 5 329 14 is_stmt 0 view .LVU97
 439 0018 80F82430 		strb	r3, [r0, #36]
 440              	.LVL25:
 329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/char_traits.h **** 
 441              		.loc 5 329 14 view .LVU98
 442              	.LBE697:
 443              	.LBE696:
 444              	.LBE693:
 445              	.LBE698:
 446              		.loc 7 14 5 is_stmt 1 view .LVU99
 447              		.loc 7 14 17 is_stmt 0 view .LVU100
 448 001c 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 449              	.LVL26:
 450              		.loc 7 14 17 view .LVU101
 451 001e 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 452              	.LVL27:
 453              		.loc 7 14 17 view .LVU102
 454 0020 94E80700 		ldm	r4, {r0, r1, r2}
 455 0024 85E80700 		stm	r5, {r0, r1, r2}
  15:src/theory.cpp ****     this->displayName = displayName;
 456              		.loc 7 15 5 is_stmt 1 view .LVU103
 457              	.LVL28:
 458              	.LBB699:
 459              	.LBI699:
 672:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 41


 673:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 674:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 675:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 676:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 677:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 678:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(const basic_string& __str)
 460              		.loc 2 678 7 view .LVU104
 461              	.LBB700:
 462              	.LBI700:
 679:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 680:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return this->assign(__str);
 681:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 682:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 683:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 684:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 685:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 686:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 687:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 688:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(const _CharT* __s)
 689:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->assign(__s); }
 690:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 691:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 692:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 693:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __c  Source character.
 694:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 695:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 696:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
 697:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 698:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 699:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(_CharT __c)
 700:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 701:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->assign(1, __c);
 702:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
 703:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 704:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 705:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 706:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 707:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 708:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 709:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 710:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 711:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 712:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        **/
 713:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 714:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 715:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 716:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(basic_string&& __str)
 717:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 718:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 719:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 720:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 721:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 722:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 723:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 724:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 725:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(_M_local_data());
 726:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_set_length(0);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 42


 727:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 728:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 729:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 730:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 731:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 732:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 733:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 734:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (__str.size())
 735:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 736:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_set_length(__str.size());
 737:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 738:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 739:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 740:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 741:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 742:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 743:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    pointer __data = nullptr;
 744:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    size_type __capacity;
 745:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (!_M_is_local())
 746:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      {
 747:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 748:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  {
 749:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 750:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    __data = _M_data();
 751:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 752:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  }
 753:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		else // __str can't use it, so free it.
 754:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 755:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      }
 756:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 757:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 758:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 759:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 760:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (__data)
 761:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      {
 762:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		__str._M_data(__data);
 763:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 764:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      }
 765:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    else
 766:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 767:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 768:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	else // Need to do a deep copy
 769:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  assign(__str);
 770:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__str.clear();
 771:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
 772:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 773:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 774:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 775:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 776:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 777:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 778:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
 779:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 780:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 781:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 782:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
 783:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 43


 784:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
 785:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 786:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 787:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 788:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 789:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 790:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 791:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****      template<typename _Tp>
 792:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 793:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        operator=(const _Tp& __svt)
 794:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        { return this->assign(__svt); }
 795:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 796:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 797:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 798:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return A string_view.
 799:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 800:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator __sv_type() const noexcept
 801:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 802:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
 803:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 804:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Iterators:
 805:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 806:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 807:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  the %string.
 808:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 809:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       iterator
 810:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 811:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return iterator(_M_data()); }
 812:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 813:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 814:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 815:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.
 816:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 817:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 818:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 819:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 820:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 821:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 822:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 823:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.
 824:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 825:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       iterator
 826:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 827:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 828:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 829:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 830:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 831:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  last character in the %string.
 832:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 833:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 834:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 835:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 836:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 837:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 838:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 839:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 840:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  order.
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 44


 841:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 842:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reverse_iterator
 843:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 844:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 845:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 846:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 847:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 848:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 849:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  reverse element order.
 850:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 851:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 852:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 853:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 854:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 855:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 856:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 857:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 858:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element order.
 859:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 860:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reverse_iterator
 861:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 862:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 863:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 864:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 865:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 866:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 867:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 868:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 869:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 870:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 871:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 872:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 873:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 874:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 875:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 876:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  character in the %string.
 877:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 878:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 879:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       cbegin() const noexcept
 880:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 881:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 882:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 883:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 884:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  last character in the %string.
 885:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 886:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_iterator
 887:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       cend() const noexcept
 888:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 889:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 890:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 891:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 892:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 893:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  reverse element order.
 894:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 895:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 896:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       crbegin() const noexcept
 897:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 45


 898:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 899:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 900:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 901:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 902:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 903:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 904:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reverse_iterator
 905:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       crend() const noexcept
 906:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 907:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 908:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 909:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****     public:
 910:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Capacity:
 911:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 912:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  null-termination.
 913:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 914:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 915:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_string_length; }
 916:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 917:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 918:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  null-termination.
 919:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 920:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 921:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_string_length; }
 922:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 923:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 924:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 925:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 926:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 927:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 928:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 929:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 930:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 931:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 932:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 933:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 934:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 935:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 936:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 937:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 938:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 939:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 940:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 941:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 942:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 943:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 944:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 945:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 946:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 947:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 948:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 949:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  setting them to 0.
 950:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 951:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 952:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       resize(size_type __n)
 953:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 954:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 46


 955:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 956:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 957:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
 958:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       shrink_to_fit() noexcept
 959:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 960:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cpp_exceptions
 961:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (capacity() > size())
 962:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
 963:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    try
 964:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      { reserve(0); }
 965:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    catch(...)
 966:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      { }
 967:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
 968:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 969:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 970:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
 971:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 972:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 973:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 974:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  before needing to allocate more memory.
 975:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
 976:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       size_type
 977:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 978:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 979:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 980:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 981:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
 982:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 983:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
 984:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 985:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *          characters.
 986:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
 987:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
 988:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 989:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
 990:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
 991:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
 992:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  thrown.
 993:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
 994:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
 995:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
 996:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
 997:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
 998:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  data.
 999:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1000:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
1001:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1002:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1003:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1004:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Erases the string, making it empty.
1005:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1006:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
1007:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1008:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_set_length(0); }
1009:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1010:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1011:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 47


1012:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
1013:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1014:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1015:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1016:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->size() == 0; }
1017:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1018:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Element access:
1019:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1020:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1021:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1022:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1023:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1024:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1025:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1026:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1027:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  see at().)
1028:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1029:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1030:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1031:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1032:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1033:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
1034:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1035:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1036:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1037:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1038:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1039:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1040:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1041:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1042:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1043:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1044:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  see at().)
1045:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1046:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1047:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator[](size_type __pos)
1048:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1049:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1050:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	// and in C++11 mode.
1051:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1052:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1053:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1054:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
1055:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1056:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1057:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1058:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1059:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1060:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1061:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1062:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1063:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1064:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1065:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1066:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1067:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1068:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       at(size_type __n) const
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 48


1069:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1070:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n >= this->size())
1071:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1072:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1073:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1074:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				   __n, this->size());
1075:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1076:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1077:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1078:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1079:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1080:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1081:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1082:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1083:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1084:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1085:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1086:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1087:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1088:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1089:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       at(size_type __n)
1090:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1091:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__n >= size())
1092:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1093:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1094:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1095:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 				   __n, this->size());
1096:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1097:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1098:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1099:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1100:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1101:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1102:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element of the %string.
1103:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1104:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1105:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       front() noexcept
1106:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1107:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1108:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](0);
1109:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1110:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1111:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1112:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1113:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element of the %string.
1114:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1115:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1116:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       front() const noexcept
1117:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1118:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1119:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](0);
1120:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1121:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1122:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1123:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1124:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  element of the %string.
1125:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 49


1126:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       reference
1127:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       back() noexcept
1128:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1129:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1130:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1131:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1132:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1133:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1134:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1135:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  last element of the %string.
1136:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1137:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       const_reference
1138:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       back() const noexcept
1139:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1140:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1141:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1142:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1143:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
1144:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1145:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       // Modifiers:
1146:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1147:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1148:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1149:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1150:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1151:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1152:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
1153:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__str); }
1154:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1155:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1156:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1157:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1159:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1160:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1161:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
1162:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__s); }
1163:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1165:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a character.
1166:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __c  The character to append.
1167:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1168:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1169:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1170:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(_CharT __c)
1171:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1172:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->push_back(__c);
1173:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return *this;
1174:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1175:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1176:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1177:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1178:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1179:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1180:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1181:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1182:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 50


1183:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1184:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1185:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
1186:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1187:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1188:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1189:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1190:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1191:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1192:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1193:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
1194:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1195:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1196:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{ return this->append(__svt); }
1197:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
1198:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1199:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1200:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1201:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1202:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1203:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1204:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1205:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const basic_string& __str)
1206:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1207:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1208:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1209:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a substring.
1210:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1211:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1212:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1213:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1214:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1215:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1216:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1217:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1218:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1219:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
1220:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1221:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1222:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1223:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data()
1224:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1225:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1226:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1227:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1228:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a C substring.
1229:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1230:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1231:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1232:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1233:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1234:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1235:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1236:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1237:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1238:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1239:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 51


1240:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1241:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1242:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1243:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1244:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1245:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1246:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1247:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(const _CharT* __s)
1248:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1249:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1250:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1251:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1252:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1253:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1254:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1255:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1256:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
1257:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1258:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
1259:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1260:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1261:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1262:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1263:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1264:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1265:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1266:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1267:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1268:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1269:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1270:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1271:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1272:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1273:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1274:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1275:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1276:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++11
1277:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1278:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1279:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
1280:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1281:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1282:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1283:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *
1284:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1285:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1286:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1287:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<class _InputIterator,
1288:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1289:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #else
1290:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<class _InputIterator>
1291:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
1292:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         basic_string&
1293:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1294:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1295:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1296:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 52


1297:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1298:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1299:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1300:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1301:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1302:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
1303:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1304:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         append(const _Tp& __svt)
1305:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         {
1306:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           __sv_type __sv = __svt;
1307:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1308:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         }
1309:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1310:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1311:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1312:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1313:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1314:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1315:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1316:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1317:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       template<typename _Tp>
1318:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1319:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1320:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	{
1321:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1322:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  return _M_append(__sv.data()
1323:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1324:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1325:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	}
1326:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif // C++17
1327:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1328:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1329:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Append a single character.
1330:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param __c  Character to append.
1331:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1332:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       void
1333:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       push_back(_CharT __c)
1334:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1335:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
1336:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1337:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1338:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1339:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1340:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       }
1341:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
1342:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       /**
1343:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1344:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1345:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1346:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****        */
1347:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       basic_string&
1348:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       assign(const basic_string& __str)
 463              		.loc 2 1348 7 view .LVU105
 464              	.LBE700:
 465              	.LBE699:
  16:src/theory.cpp ****     this->chordScale = chordScale;
 466              		.loc 7 16 22 is_stmt 0 view .LVU106
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 53


 467 0028 0DAD     		add	r5, sp, #52
 468              	.LBB705:
 469              	.LBB703:
 470              	.LBB701:
1349:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
1350:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1351:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1352:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  {
1353:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1354:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1355:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      {
1356:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1357:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
1358:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1359:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  {
1360:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1361:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_data(_M_local_data());
1362:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_set_length(0);
1363:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  }
1364:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		else
1365:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  {
1366:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    const auto __len = __str.size();
1367:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1368:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
1369:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
1370:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1371:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_data(__ptr);
1372:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_capacity(__len);
1373:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		    _M_set_length(__len);
1374:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 		  }
1375:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	      }
1376:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1377:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	  }
1378:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** #endif
1379:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 	this->_M_assign(__str);
 471              		.loc 2 1379 17 view .LVU107
 472 002a 0C99     		ldr	r1, [sp, #48]
 473 002c 06F11C00 		add	r0, r6, #28
 474              	.LVL29:
 475              		.loc 2 1379 17 view .LVU108
 476              	.LBE701:
 477              	.LBE703:
 478              	.LBE705:
 479              		.loc 7 16 22 view .LVU109
 480 0030 06F13404 		add	r4, r6, #52
 481              	.LBB706:
 482              	.LBB704:
 483              	.LBB702:
 484              		.loc 2 1379 17 view .LVU110
 485 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 486              	.LVL30:
 487              		.loc 2 1379 17 view .LVU111
 488              	.LBE702:
 489              	.LBE704:
 490              	.LBE706:
 491              		.loc 7 16 5 is_stmt 1 view .LVU112
 492              		.loc 7 16 22 is_stmt 0 view .LVU113
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 54


 493 0038 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 494 003a 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 495 003c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 496 003e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 497 0040 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 498 0044 84E80F00 		stm	r4, {r0, r1, r2, r3}
 499              	.LBE708:
  17:src/theory.cpp **** };
 500              		.loc 7 17 1 view .LVU114
 501 0048 3046     		mov	r0, r6
 502 004a BDE87040 		pop	{r4, r5, r6, lr}
 503              		.cfi_restore 14
 504              		.cfi_restore 6
 505              		.cfi_restore 5
 506              		.cfi_restore 4
 507              		.cfi_def_cfa_offset 16
 508              	.LVL31:
 509              		.loc 7 17 1 view .LVU115
 510 004e 04B0     		add	sp, sp, #16
 511              		.cfi_def_cfa_offset 0
 512 0050 7047     		bx	lr
 513              		.cfi_endproc
 514              	.LFE1977:
 516              		.global	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 517              		.thumb_set _ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj1
 518              		.section	.rodata._Z41__static_initialization_and_destruction_0ii.constprop.0.str1.1,"aMS",%progbit
 519              	.LC14:
 520 0000 6D616A37 		.ascii	"maj7\000"
 520      00
 521              	.LC15:
 522 0005 6D696E37 		.ascii	"min7\000"
 522      00
 523              	.LC16:
 524 000a 3600     		.ascii	"6\000"
 525              	.LC17:
 526 000c 6D696E36 		.ascii	"min6\000"
 526      00
 527              	.LC18:
 528 0011 3700     		.ascii	"7\000"
 529              	.LC19:
 530 0013 68616C66 		.ascii	"halfdim7\000"
 530      64696D37 
 530      00
 531              	.LC20:
 532 001c 64696D37 		.ascii	"dim7\000"
 532      00
 533              	.LC21:
 534 0021 37623900 		.ascii	"7b9\000"
 535              	.LC22:
 536 0025 37233900 		.ascii	"7#9\000"
 537              	.LC23:
 538 0029 6D616A37 		.ascii	"maj7#11\000"
 538      23313100 
 539              	.LC24:
 540 0031 37233131 		.ascii	"7#11\000"
 540      00
 541              	.LC25:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 55


 542 0036 37623133 		.ascii	"7b13\000"
 542      00
 543              	.LC26:
 544 003b 61756700 		.ascii	"aug\000"
 545              	.LC27:
 546 003f 4300     		.ascii	"C\000"
 547              	.LC28:
 548 0041 446200   		.ascii	"Db\000"
 549              	.LC29:
 550 0044 4400     		.ascii	"D\000"
 551              	.LC30:
 552 0046 456200   		.ascii	"Eb\000"
 553              	.LC31:
 554 0049 4500     		.ascii	"E\000"
 555              	.LC32:
 556 004b 4600     		.ascii	"F\000"
 557              	.LC33:
 558 004d 476200   		.ascii	"Gb\000"
 559              	.LC34:
 560 0050 4700     		.ascii	"G\000"
 561              	.LC35:
 562 0052 416200   		.ascii	"Ab\000"
 563              	.LC36:
 564 0055 4100     		.ascii	"A\000"
 565              	.LC37:
 566 0057 426200   		.ascii	"Bb\000"
 567              	.LC38:
 568 005a 4200     		.ascii	"B\000"
 569              		.section	.text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0,"ax",%progbits
 570              		.align	1
 571              		.syntax unified
 572              		.thumb
 573              		.thumb_func
 575              	_Z41__static_initialization_and_destruction_0ii.constprop.0:
 576              	.LFB2471:
  18:src/theory.cpp **** 
  19:src/theory.cpp **** Chord::~Chord()
  20:src/theory.cpp **** {
  21:src/theory.cpp **** };
  22:src/theory.cpp **** 
  23:src/theory.cpp **** array<float, 12> ionianScale = {1, 0, 0.1, 0, 0.5, 0.3, 0, 0.7, 0, 0.3, 0, 0.5};
  24:src/theory.cpp **** array<float, 12> dorianScale = {1, 0, 1, 1, 0, 1, 0, 1, 0, 1, 1, 0};
  25:src/theory.cpp **** array<float, 12> phrygianScale = {1, 1, 0, 1, 0, 1, 0, 1, 1, 0, 1, 0};
  26:src/theory.cpp **** array<float, 12> lydianScale = {1, 0, 0.1, 0, 0.5, 0, 0.7, 0.7, 0, 0.3, 0, 0.6};
  27:src/theory.cpp **** array<float, 12> lydianDominantScale = {1, 0, 0.1, 0, 0.5, 0, 0.7, 0.7, 0, 0.3, 0.6, 0};
  28:src/theory.cpp **** array<float, 12> mixolydianScale = {1, 0, 0.1, 0, 0.5, 0.3, 0, 0.7, 0, 0.3, 0.5, 0};
  29:src/theory.cpp **** array<float, 12> mixolydianFlat2Scale = {1, 0.7, 0, 0, 0.5, 0.2, 0, 0.7, 0, 0.2, 0.6, 0};
  30:src/theory.cpp **** array<float, 12> mixolydianFlat13Scale = {1, 0, 0.1, 0, 0.5, 1, 0, 0.8, 0.7, 0, 0.6, 0};
  31:src/theory.cpp **** array<float, 12> aeoleanScale = {1, 0, 0.1, 0.5, 0, 0.3, 0, 0.7, 0, 0.3, 0, 0.5};
  32:src/theory.cpp **** array<float, 12> locrianScale = {1, 0.1, 0, 0.5, 0, 0.3, 0.7, 0, 0.3, 0, 0.5, 0};
  33:src/theory.cpp **** array<float, 12> diminishedScale = {1, 0, 0.6, 0.8, 0, 0.6, 0.8, 0, 0.6, 0.8, 0, 0.6};
  34:src/theory.cpp **** array<float, 12> alteredScale = {1, 0.3, 0, 0.5, 0.1, 0, 0.8, 0, 0.4, 0, 0.6, 0};
  35:src/theory.cpp **** array<float, 12> augmentedScale = {1, 0, 0.2, 0, 0.5, 0, 0, 0.2, 0.8, 0, 0, 0.2};
  36:src/theory.cpp **** 
  37:src/theory.cpp **** // TODO not actually sure 13 is relevant for lots of these
  38:src/theory.cpp **** // TODO more than one scale per chord
  39:src/theory.cpp **** Chord *majorChord = new Chord({0, 4, 7, 11, 14, 17, 21}, "maj7", ionianScale);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 56


  40:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
  41:src/theory.cpp **** Chord *major6Chord = new Chord({0, 4, 7, 9, 14, 17, 21}, "6", ionianScale);
  42:src/theory.cpp **** Chord *minor6Chord = new Chord({0, 3, 7, 9, 14, 17, 21}, "min6", dorianScale);
  43:src/theory.cpp **** Chord *dominantChord = new Chord({0, 4, 7, 10, 14, 17, 21}, "7", mixolydianScale);
  44:src/theory.cpp **** Chord *halfDiminishedChord = new Chord({0, 3, 6, 10, 14, 17, 21}, "halfdim7", locrianScale);
  45:src/theory.cpp **** Chord *diminishedChord = new Chord({0, 3, 6, 9, 12, 15, 21}, "dim7", diminishedScale);
  46:src/theory.cpp **** Chord *flat9chord = new Chord({0, 4, 7, 10, 13, 17, 21}, "7b9", mixolydianFlat2Scale);
  47:src/theory.cpp **** Chord *sharp9chord = new Chord({0, 4, 7, 10, 15, 17, 21}, "7#9", alteredScale);
  48:src/theory.cpp **** Chord *sharp11chord = new Chord({0, 4, 7, 11, 14, 18, 21}, "maj7#11", lydianScale);
  49:src/theory.cpp **** Chord *dominantSharp11chord = new Chord({0, 4, 7, 10, 14, 18, 21}, "7#11", lydianDominantScale);
  50:src/theory.cpp **** Chord *flat13chord = new Chord({0, 4, 7, 10, 14, 17, 20}, "7b13", mixolydianFlat13Scale);
  51:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
  52:src/theory.cpp **** 
  53:src/theory.cpp **** // TODO OOPS DOESN'T WORK W SHARPS :(
  54:src/theory.cpp **** array<string, 12> noteDisplayNames = {"C", "Db", "D", "Eb", "E", "F", "Gb", "G", "Ab", "A", "Bb", "
  55:src/theory.cpp **** 
  56:src/theory.cpp **** array<Chord *, 14> chordList = {majorChord, minorChord, major6Chord, minor6Chord, dominantChord, ha
 577              		.loc 7 56 226 is_stmt 1 view -0
 578              		.cfi_startproc
 579              		@ args = 0, pretend = 0, frame = 104
 580              		@ frame_needed = 0, uses_anonymous_args = 0
 581              	.LVL32:
 582              		.loc 7 56 226 is_stmt 0 view .LVU117
 583 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 584              		.cfi_def_cfa_offset 36
 585              		.cfi_offset 4, -36
 586              		.cfi_offset 5, -32
 587              		.cfi_offset 6, -28
 588              		.cfi_offset 7, -24
 589              		.cfi_offset 8, -20
 590              		.cfi_offset 9, -16
 591              		.cfi_offset 10, -12
 592              		.cfi_offset 11, -8
 593              		.cfi_offset 14, -4
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 594              		.loc 7 39 8 view .LVU118
 595 0004 D74E     		ldr	r6, .L12
 596              		.loc 7 56 226 view .LVU119
 597 0006 ADB0     		sub	sp, sp, #180
 598              		.cfi_def_cfa_offset 216
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 599              		.loc 7 39 8 view .LVU120
 600 0008 DFF89083 		ldr	r8, .L12+56
 601 000c 3546     		mov	r5, r6
 602 000e 19AC     		add	r4, sp, #100
 603 0010 4746     		mov	r7, r8
  47:src/theory.cpp **** Chord *sharp11chord = new Chord({0, 4, 7, 11, 14, 18, 21}, "maj7#11", lydianScale);
 604              		.loc 7 47 8 view .LVU121
 605 0012 DFF88CB3 		ldr	fp, .L12+60
  48:src/theory.cpp **** Chord *dominantSharp11chord = new Chord({0, 4, 7, 10, 14, 18, 21}, "7#11", lydianDominantScale);
 606              		.loc 7 48 8 view .LVU122
 607 0016 DFF88CA3 		ldr	r10, .L12+64
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 608              		.loc 7 39 8 view .LVU123
 609 001a 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 610 001c 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 611 001e 95E80700 		ldm	r5, {r0, r1, r2}
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 57


 612 0022 84E80700 		stm	r4, {r0, r1, r2}
 613              	.LVL33:
 614              	.LBB709:
 615              	.LBI709:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 616              		.loc 3 164 7 is_stmt 1 view .LVU124
 617              	.LBB710:
 618              	.LBI710:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 619              		.loc 4 79 7 view .LVU125
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 620              		.loc 4 79 7 is_stmt 0 view .LVU126
 621              	.LBE710:
 622              	.LBE709:
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 623              		.loc 7 39 8 view .LVU127
 624 0026 13A8     		add	r0, sp, #76
 625 0028 CF49     		ldr	r1, .L12+4
 626 002a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 627              	.LVL34:
 628 002e 20AC     		add	r4, sp, #128
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 629              		.loc 7 39 77 view .LVU128
 630 0030 20AD     		add	r5, sp, #128
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 631              		.loc 7 39 8 view .LVU129
 632 0032 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 633 0034 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 634 0036 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 635 0038 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 636 003a 97E80F00 		ldm	r7, {r0, r1, r2, r3}
 637 003e 84E80F00 		stm	r4, {r0, r1, r2, r3}
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 638              		.loc 7 39 77 view .LVU130
 639 0042 6420     		movs	r0, #100
 640 0044 05AC     		add	r4, sp, #20
 641 0046 FFF7FEFF 		bl	_Znwj
 642              	.LVL35:
 643 004a 8146     		mov	r9, r0
 644 004c 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 645 004e 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 646 0050 0FCD     		ldmia	r5!, {r0, r1, r2, r3}
 647 0052 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 648 0054 95E80F00 		ldm	r5, {r0, r1, r2, r3}
 649 0058 84E80F00 		stm	r4, {r0, r1, r2, r3}
 650 005c 1CAC     		add	r4, sp, #112
 651 005e 13AB     		add	r3, sp, #76
 652 0060 19AD     		add	r5, sp, #100
 653 0062 0493     		str	r3, [sp, #16]
 654 0064 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 655 0068 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 656 006c 95E80E00 		ldm	r5, {r1, r2, r3}
 657 0070 4846     		mov	r0, r9
 658 0072 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 659              	.LVL36:
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 660              		.loc 7 39 8 view .LVU131
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 58


 661 0076 BD4B     		ldr	r3, .L12+8
 662              	.LBB711:
 663              	.LBB712:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 664              		.loc 2 671 19 view .LVU132
 665 0078 13A8     		add	r0, sp, #76
 666              	.LBE712:
 667              	.LBE711:
  39:src/theory.cpp **** Chord *minorChord = new Chord({0, 3, 7, 10, 14, 17, 21}, "min7", aeoleanScale);
 668              		.loc 7 39 8 view .LVU133
 669 007a C3F80090 		str	r9, [r3]
 670              	.LVL37:
 671              	.LBB717:
 672              	.LBI711:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 673              		.loc 2 670 7 is_stmt 1 view .LVU134
 674              	.LBB716:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 675              		.loc 2 671 19 is_stmt 0 view .LVU135
 676 007e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 677              	.LVL38:
 678              	.LBB713:
 679              	.LBI713:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 680              		.loc 2 158 14 is_stmt 1 view .LVU136
 681              	.LBB714:
 682              	.LBI714:
 683              		.loc 3 182 7 view .LVU137
 684              	.LBB715:
 685              	.LBI715:
 686              		.loc 4 89 7 view .LVU138
 687              		.loc 4 89 7 is_stmt 0 view .LVU139
 688              	.LBE715:
 689              	.LBE714:
 690              	.LBE713:
 691              	.LBE716:
 692              	.LBE717:
 693              	.LBB718:
 694              	.LBI718:
 695              		.loc 3 182 7 is_stmt 1 view .LVU140
 696              	.LBB719:
 697              	.LBI719:
 698              		.loc 4 89 7 view .LVU141
 699              		.loc 4 89 7 is_stmt 0 view .LVU142
 700              	.LBE719:
 701              	.LBE718:
  40:src/theory.cpp **** Chord *major6Chord = new Chord({0, 4, 7, 9, 14, 17, 21}, "6", ionianScale);
 702              		.loc 7 40 8 view .LVU143
 703 0082 06F11C0E 		add	lr, r6, #28
 704 0086 AC46     		mov	ip, r5
 705 0088 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 706 008c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 707 0090 9EE80700 		ldm	lr, {r0, r1, r2}
 708 0094 8CE80700 		stm	ip, {r0, r1, r2}
 709              	.LVL39:
 710              	.LBB720:
 711              	.LBI720:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 59


 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 712              		.loc 3 164 7 is_stmt 1 view .LVU144
 713              	.LBB721:
 714              	.LBI721:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 715              		.loc 4 79 7 view .LVU145
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 716              		.loc 4 79 7 is_stmt 0 view .LVU146
 717              	.LBE721:
 718              	.LBE720:
  40:src/theory.cpp **** Chord *major6Chord = new Chord({0, 4, 7, 9, 14, 17, 21}, "6", ionianScale);
 719              		.loc 7 40 8 view .LVU147
 720 0098 13A8     		add	r0, sp, #76
 721 009a B549     		ldr	r1, .L12+12
 722 009c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 723              	.LVL40:
 724 00a0 DFF804E3 		ldr	lr, .L12+68
 725 00a4 0DF1800C 		add	ip, sp, #128
 726 00a8 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 727 00ac ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 728 00b0 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 729 00b4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 730 00b8 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 731 00bc 8CE80F00 		stm	ip, {r0, r1, r2, r3}
  40:src/theory.cpp **** Chord *major6Chord = new Chord({0, 4, 7, 9, 14, 17, 21}, "6", ionianScale);
 732              		.loc 7 40 78 view .LVU148
 733 00c0 6420     		movs	r0, #100
 734 00c2 FFF7FEFF 		bl	_Znwj
 735              	.LVL41:
 736 00c6 0DF1800E 		add	lr, sp, #128
 737 00ca 8146     		mov	r9, r0
 738 00cc 0DF1140C 		add	ip, sp, #20
 739 00d0 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 740 00d4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 741 00d8 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 742 00dc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 743 00e0 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 744 00e4 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 745 00e8 13A9     		add	r1, sp, #76
 746 00ea 0491     		str	r1, [sp, #16]
 747 00ec 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 748 00f0 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 749 00f4 95E80E00 		ldm	r5, {r1, r2, r3}
 750 00f8 4846     		mov	r0, r9
 751 00fa FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 752              	.LVL42:
  40:src/theory.cpp **** Chord *major6Chord = new Chord({0, 4, 7, 9, 14, 17, 21}, "6", ionianScale);
 753              		.loc 7 40 8 view .LVU149
 754 00fe 9D49     		ldr	r1, .L12+16
 755              	.LBB722:
 756              	.LBB723:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 757              		.loc 2 671 19 view .LVU150
 758 0100 13A8     		add	r0, sp, #76
 759              	.LBE723:
 760              	.LBE722:
  40:src/theory.cpp **** Chord *major6Chord = new Chord({0, 4, 7, 9, 14, 17, 21}, "6", ionianScale);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 60


 761              		.loc 7 40 8 view .LVU151
 762 0102 C1F80090 		str	r9, [r1]
 763              	.LVL43:
 764              	.LBB728:
 765              	.LBI722:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 766              		.loc 2 670 7 is_stmt 1 view .LVU152
 767              	.LBB727:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 768              		.loc 2 671 19 is_stmt 0 view .LVU153
 769 0106 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 770              	.LVL44:
 771              	.LBB724:
 772              	.LBI724:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 773              		.loc 2 158 14 is_stmt 1 view .LVU154
 774              	.LBB725:
 775              	.LBI725:
 776              		.loc 3 182 7 view .LVU155
 777              	.LBB726:
 778              	.LBI726:
 779              		.loc 4 89 7 view .LVU156
 780              		.loc 4 89 7 is_stmt 0 view .LVU157
 781              	.LBE726:
 782              	.LBE725:
 783              	.LBE724:
 784              	.LBE727:
 785              	.LBE728:
 786              	.LBB729:
 787              	.LBI729:
 788              		.loc 3 182 7 is_stmt 1 view .LVU158
 789              	.LBB730:
 790              	.LBI730:
 791              		.loc 4 89 7 view .LVU159
 792              		.loc 4 89 7 is_stmt 0 view .LVU160
 793              	.LBE730:
 794              	.LBE729:
  41:src/theory.cpp **** Chord *minor6Chord = new Chord({0, 3, 7, 9, 14, 17, 21}, "min6", dorianScale);
 795              		.loc 7 41 8 view .LVU161
 796 010a 06F1380E 		add	lr, r6, #56
 797 010e AC46     		mov	ip, r5
  49:src/theory.cpp **** Chord *flat13chord = new Chord({0, 4, 7, 10, 14, 17, 20}, "7b13", mixolydianFlat13Scale);
 798              		.loc 7 49 8 view .LVU162
 799 0110 DFF89892 		ldr	r9, .L12+72
  41:src/theory.cpp **** Chord *minor6Chord = new Chord({0, 3, 7, 9, 14, 17, 21}, "min6", dorianScale);
 800              		.loc 7 41 8 view .LVU163
 801 0114 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 802 0118 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 803 011c 9EE80700 		ldm	lr, {r0, r1, r2}
 804 0120 8CE80700 		stm	ip, {r0, r1, r2}
 805              	.LVL45:
 806              	.LBB731:
 807              	.LBI731:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 808              		.loc 3 164 7 is_stmt 1 view .LVU164
 809              	.LBB732:
 810              	.LBI732:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 61


  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 811              		.loc 4 79 7 view .LVU165
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 812              		.loc 4 79 7 is_stmt 0 view .LVU166
 813              	.LBE732:
 814              	.LBE731:
  41:src/theory.cpp **** Chord *minor6Chord = new Chord({0, 3, 7, 9, 14, 17, 21}, "min6", dorianScale);
 815              		.loc 7 41 8 view .LVU167
 816 0124 13A8     		add	r0, sp, #76
 817 0126 9449     		ldr	r1, .L12+20
 818 0128 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 819              	.LVL46:
 820 012c 0DF1800C 		add	ip, sp, #128
 821 0130 B8E80F00 		ldmia	r8!, {r0, r1, r2, r3}
 822 0134 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 823 0138 B8E80F00 		ldmia	r8!, {r0, r1, r2, r3}
 824 013c ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 825 0140 97E80F00 		ldm	r7, {r0, r1, r2, r3}
 826 0144 8CE80F00 		stm	ip, {r0, r1, r2, r3}
  41:src/theory.cpp **** Chord *minor6Chord = new Chord({0, 3, 7, 9, 14, 17, 21}, "min6", dorianScale);
 827              		.loc 7 41 74 view .LVU168
 828 0148 6420     		movs	r0, #100
 829 014a 05AF     		add	r7, sp, #20
 830 014c FFF7FEFF 		bl	_Znwj
 831              	.LVL47:
 832 0150 0DF1800C 		add	ip, sp, #128
 833 0154 8046     		mov	r8, r0
 834 0156 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 835 015a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 836 015c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 837 0160 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 838 0162 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 839 0166 87E80F00 		stm	r7, {r0, r1, r2, r3}
 840 016a 13A8     		add	r0, sp, #76
 841              	.LBB733:
 842              	.LBB734:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 843              		.loc 2 671 19 view .LVU169
 844 016c 13AF     		add	r7, sp, #76
 845              	.LBE734:
 846              	.LBE733:
  41:src/theory.cpp **** Chord *minor6Chord = new Chord({0, 3, 7, 9, 14, 17, 21}, "min6", dorianScale);
 847              		.loc 7 41 74 view .LVU170
 848 016e 0490     		str	r0, [sp, #16]
 849 0170 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 850 0174 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 851 0178 95E80E00 		ldm	r5, {r1, r2, r3}
 852 017c 4046     		mov	r0, r8
 853 017e FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 854              	.LVL48:
  41:src/theory.cpp **** Chord *minor6Chord = new Chord({0, 3, 7, 9, 14, 17, 21}, "min6", dorianScale);
 855              		.loc 7 41 8 view .LVU171
 856 0182 7E48     		ldr	r0, .L12+24
 857 0184 C0F80080 		str	r8, [r0]
 858              	.LVL49:
 859              	.LBB739:
 860              	.LBI733:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 62


 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 861              		.loc 2 670 7 is_stmt 1 view .LVU172
 862              	.LBB738:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 863              		.loc 2 671 19 is_stmt 0 view .LVU173
 864 0188 3846     		mov	r0, r7
 865 018a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 866              	.LVL50:
 867              	.LBB735:
 868              	.LBI735:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 869              		.loc 2 158 14 is_stmt 1 view .LVU174
 870              	.LBB736:
 871              	.LBI736:
 872              		.loc 3 182 7 view .LVU175
 873              	.LBB737:
 874              	.LBI737:
 875              		.loc 4 89 7 view .LVU176
 876              		.loc 4 89 7 is_stmt 0 view .LVU177
 877              	.LBE737:
 878              	.LBE736:
 879              	.LBE735:
 880              	.LBE738:
 881              	.LBE739:
 882              	.LBB740:
 883              	.LBI740:
 884              		.loc 3 182 7 is_stmt 1 view .LVU178
 885              	.LBB741:
 886              	.LBI741:
 887              		.loc 4 89 7 view .LVU179
 888              		.loc 4 89 7 is_stmt 0 view .LVU180
 889              	.LBE741:
 890              	.LBE740:
  42:src/theory.cpp **** Chord *dominantChord = new Chord({0, 4, 7, 10, 14, 17, 21}, "7", mixolydianScale);
 891              		.loc 7 42 8 view .LVU181
 892 018e 06F1540C 		add	ip, r6, #84
 893 0192 2F46     		mov	r7, r5
  50:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
 894              		.loc 7 50 8 view .LVU182
 895 0194 DFF81882 		ldr	r8, .L12+76
  42:src/theory.cpp **** Chord *dominantChord = new Chord({0, 4, 7, 10, 14, 17, 21}, "7", mixolydianScale);
 896              		.loc 7 42 8 view .LVU183
 897 0198 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 898 019c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 899 019e 9CE80700 		ldm	ip, {r0, r1, r2}
 900 01a2 87E80700 		stm	r7, {r0, r1, r2}
 901              	.LVL51:
 902              	.LBB742:
 903              	.LBI742:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 904              		.loc 3 164 7 is_stmt 1 view .LVU184
 905              	.LBB743:
 906              	.LBI743:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 907              		.loc 4 79 7 view .LVU185
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 908              		.loc 4 79 7 is_stmt 0 view .LVU186
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 63


 909              	.LBE743:
 910              	.LBE742:
  42:src/theory.cpp **** Chord *dominantChord = new Chord({0, 4, 7, 10, 14, 17, 21}, "7", mixolydianScale);
 911              		.loc 7 42 8 view .LVU187
 912 01a6 13AF     		add	r7, sp, #76
 913 01a8 7549     		ldr	r1, .L12+28
 914 01aa 3846     		mov	r0, r7
 915 01ac 20AF     		add	r7, sp, #128
 916 01ae FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 917              	.LVL52:
 918 01b2 DFF800C2 		ldr	ip, .L12+80
 919 01b6 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 920 01ba 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 921 01bc BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 922 01c0 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 923 01c2 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 924 01c6 87E80F00 		stm	r7, {r0, r1, r2, r3}
  42:src/theory.cpp **** Chord *dominantChord = new Chord({0, 4, 7, 10, 14, 17, 21}, "7", mixolydianScale);
 925              		.loc 7 42 77 view .LVU188
 926 01ca 6420     		movs	r0, #100
 927 01cc FFF7FEFF 		bl	_Znwj
 928              	.LVL53:
 929 01d0 0DF1800E 		add	lr, sp, #128
 930 01d4 0746     		mov	r7, r0
 931 01d6 0DF1140C 		add	ip, sp, #20
 932 01da BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 933 01de ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 934 01e2 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 935 01e6 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 936 01ea 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 937 01ee 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 938 01f2 13AB     		add	r3, sp, #76
 939 01f4 0493     		str	r3, [sp, #16]
 940 01f6 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 941 01fa 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 942 01fe 95E80E00 		ldm	r5, {r1, r2, r3}
 943 0202 3846     		mov	r0, r7
 944 0204 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 945              	.LVL54:
  42:src/theory.cpp **** Chord *dominantChord = new Chord({0, 4, 7, 10, 14, 17, 21}, "7", mixolydianScale);
 946              		.loc 7 42 8 view .LVU189
 947 0208 5E4B     		ldr	r3, .L12+32
 948 020a 1F60     		str	r7, [r3]
 949              	.LVL55:
 950              	.LBB744:
 951              	.LBI744:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 952              		.loc 2 670 7 is_stmt 1 view .LVU190
 953              	.LBB745:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 954              		.loc 2 671 19 is_stmt 0 view .LVU191
 955 020c 13AF     		add	r7, sp, #76
 956              	.LVL56:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 957              		.loc 2 671 19 view .LVU192
 958 020e 3846     		mov	r0, r7
 959              	.LBE745:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 64


 960              	.LBE744:
  43:src/theory.cpp **** Chord *halfDiminishedChord = new Chord({0, 3, 6, 10, 14, 17, 21}, "halfdim7", locrianScale);
 961              		.loc 7 43 8 view .LVU193
 962 0210 2F46     		mov	r7, r5
 963              	.LVL57:
 964              	.LBB750:
 965              	.LBB749:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 966              		.loc 2 671 19 view .LVU194
 967 0212 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 968              	.LVL58:
 969              	.LBB746:
 970              	.LBI746:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 971              		.loc 2 158 14 is_stmt 1 view .LVU195
 972              	.LBB747:
 973              	.LBI747:
 974              		.loc 3 182 7 view .LVU196
 975              	.LBB748:
 976              	.LBI748:
 977              		.loc 4 89 7 view .LVU197
 978              		.loc 4 89 7 is_stmt 0 view .LVU198
 979              	.LBE748:
 980              	.LBE747:
 981              	.LBE746:
 982              	.LBE749:
 983              	.LBE750:
 984              	.LBB751:
 985              	.LBI751:
 986              		.loc 3 182 7 is_stmt 1 view .LVU199
 987              	.LBB752:
 988              	.LBI752:
 989              		.loc 4 89 7 view .LVU200
 990              		.loc 4 89 7 is_stmt 0 view .LVU201
 991              	.LBE752:
 992              	.LBE751:
  43:src/theory.cpp **** Chord *halfDiminishedChord = new Chord({0, 3, 6, 10, 14, 17, 21}, "halfdim7", locrianScale);
 993              		.loc 7 43 8 view .LVU202
 994 0216 06F1700C 		add	ip, r6, #112
 995 021a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 996 021e 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 997 0220 9CE80700 		ldm	ip, {r0, r1, r2}
 998 0224 87E80700 		stm	r7, {r0, r1, r2}
 999              	.LVL59:
 1000              	.LBB753:
 1001              	.LBI753:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1002              		.loc 3 164 7 is_stmt 1 view .LVU203
 1003              	.LBB754:
 1004              	.LBI754:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1005              		.loc 4 79 7 view .LVU204
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1006              		.loc 4 79 7 is_stmt 0 view .LVU205
 1007              	.LBE754:
 1008              	.LBE753:
  43:src/theory.cpp **** Chord *halfDiminishedChord = new Chord({0, 3, 6, 10, 14, 17, 21}, "halfdim7", locrianScale);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 65


 1009              		.loc 7 43 8 view .LVU206
 1010 0228 13AF     		add	r7, sp, #76
 1011 022a 5749     		ldr	r1, .L12+36
 1012 022c 3846     		mov	r0, r7
 1013 022e 20AF     		add	r7, sp, #128
 1014 0230 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1015              	.LVL60:
 1016 0234 DFF880C1 		ldr	ip, .L12+84
 1017 0238 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1018 023c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1019 023e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1020 0242 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1021 0244 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1022 0248 87E80F00 		stm	r7, {r0, r1, r2, r3}
  43:src/theory.cpp **** Chord *halfDiminishedChord = new Chord({0, 3, 6, 10, 14, 17, 21}, "halfdim7", locrianScale);
 1023              		.loc 7 43 81 view .LVU207
 1024 024c 6420     		movs	r0, #100
 1025 024e FFF7FEFF 		bl	_Znwj
 1026              	.LVL61:
 1027 0252 0DF1800E 		add	lr, sp, #128
 1028 0256 0746     		mov	r7, r0
 1029 0258 0DF1140C 		add	ip, sp, #20
 1030 025c BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1031 0260 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1032 0264 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1033 0268 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1034 026c 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1035 0270 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1036 0274 13AB     		add	r3, sp, #76
 1037 0276 0493     		str	r3, [sp, #16]
 1038 0278 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1039 027c 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1040 0280 95E80E00 		ldm	r5, {r1, r2, r3}
 1041 0284 3846     		mov	r0, r7
 1042 0286 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1043              	.LVL62:
  43:src/theory.cpp **** Chord *halfDiminishedChord = new Chord({0, 3, 6, 10, 14, 17, 21}, "halfdim7", locrianScale);
 1044              		.loc 7 43 8 view .LVU208
 1045 028a 404B     		ldr	r3, .L12+40
 1046 028c 1F60     		str	r7, [r3]
 1047              	.LVL63:
 1048              	.LBB755:
 1049              	.LBI755:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1050              		.loc 2 670 7 is_stmt 1 view .LVU209
 1051              	.LBB756:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1052              		.loc 2 671 19 is_stmt 0 view .LVU210
 1053 028e 13AF     		add	r7, sp, #76
 1054              	.LVL64:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1055              		.loc 2 671 19 view .LVU211
 1056 0290 3846     		mov	r0, r7
 1057              	.LBE756:
 1058              	.LBE755:
  44:src/theory.cpp **** Chord *diminishedChord = new Chord({0, 3, 6, 9, 12, 15, 21}, "dim7", diminishedScale);
 1059              		.loc 7 44 8 view .LVU212
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 66


 1060 0292 2F46     		mov	r7, r5
 1061              	.LVL65:
 1062              	.LBB761:
 1063              	.LBB760:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1064              		.loc 2 671 19 view .LVU213
 1065 0294 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1066              	.LVL66:
 1067              	.LBB757:
 1068              	.LBI757:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1069              		.loc 2 158 14 is_stmt 1 view .LVU214
 1070              	.LBB758:
 1071              	.LBI758:
 1072              		.loc 3 182 7 view .LVU215
 1073              	.LBB759:
 1074              	.LBI759:
 1075              		.loc 4 89 7 view .LVU216
 1076              		.loc 4 89 7 is_stmt 0 view .LVU217
 1077              	.LBE759:
 1078              	.LBE758:
 1079              	.LBE757:
 1080              	.LBE760:
 1081              	.LBE761:
 1082              	.LBB762:
 1083              	.LBI762:
 1084              		.loc 3 182 7 is_stmt 1 view .LVU218
 1085              	.LBB763:
 1086              	.LBI763:
 1087              		.loc 4 89 7 view .LVU219
 1088              		.loc 4 89 7 is_stmt 0 view .LVU220
 1089              	.LBE763:
 1090              	.LBE762:
  44:src/theory.cpp **** Chord *diminishedChord = new Chord({0, 3, 6, 9, 12, 15, 21}, "dim7", diminishedScale);
 1091              		.loc 7 44 8 view .LVU221
 1092 0298 06F18C0C 		add	ip, r6, #140
 1093 029c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1094 02a0 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1095 02a2 9CE80700 		ldm	ip, {r0, r1, r2}
 1096 02a6 87E80700 		stm	r7, {r0, r1, r2}
 1097              	.LVL67:
 1098              	.LBB764:
 1099              	.LBI764:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1100              		.loc 3 164 7 is_stmt 1 view .LVU222
 1101              	.LBB765:
 1102              	.LBI765:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1103              		.loc 4 79 7 view .LVU223
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1104              		.loc 4 79 7 is_stmt 0 view .LVU224
 1105              	.LBE765:
 1106              	.LBE764:
  44:src/theory.cpp **** Chord *diminishedChord = new Chord({0, 3, 6, 9, 12, 15, 21}, "dim7", diminishedScale);
 1107              		.loc 7 44 8 view .LVU225
 1108 02aa 13AF     		add	r7, sp, #76
 1109 02ac 3849     		ldr	r1, .L12+44
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 67


 1110 02ae 3846     		mov	r0, r7
 1111 02b0 20AF     		add	r7, sp, #128
 1112 02b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1113              	.LVL68:
 1114 02b6 DFF804C1 		ldr	ip, .L12+88
 1115 02ba BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1116 02be 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1117 02c0 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1118 02c4 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1119 02c6 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1120 02ca 87E80F00 		stm	r7, {r0, r1, r2, r3}
  44:src/theory.cpp **** Chord *diminishedChord = new Chord({0, 3, 6, 9, 12, 15, 21}, "dim7", diminishedScale);
 1121              		.loc 7 44 91 view .LVU226
 1122 02ce 6420     		movs	r0, #100
 1123 02d0 FFF7FEFF 		bl	_Znwj
 1124              	.LVL69:
 1125 02d4 0DF1800E 		add	lr, sp, #128
 1126 02d8 0746     		mov	r7, r0
 1127 02da 0DF1140C 		add	ip, sp, #20
 1128 02de BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1129 02e2 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1130 02e6 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1131 02ea ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1132 02ee 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1133 02f2 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1134 02f6 13A9     		add	r1, sp, #76
 1135 02f8 0491     		str	r1, [sp, #16]
 1136 02fa 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1137 02fe 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1138 0302 95E80E00 		ldm	r5, {r1, r2, r3}
 1139 0306 3846     		mov	r0, r7
 1140 0308 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1141              	.LVL70:
  44:src/theory.cpp **** Chord *diminishedChord = new Chord({0, 3, 6, 9, 12, 15, 21}, "dim7", diminishedScale);
 1142              		.loc 7 44 8 view .LVU227
 1143 030c 2149     		ldr	r1, .L12+48
 1144 030e 0F60     		str	r7, [r1]
 1145              	.LVL71:
 1146              	.LBB766:
 1147              	.LBI766:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1148              		.loc 2 670 7 is_stmt 1 view .LVU228
 1149              	.LBB767:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1150              		.loc 2 671 19 is_stmt 0 view .LVU229
 1151 0310 13AF     		add	r7, sp, #76
 1152              	.LVL72:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1153              		.loc 2 671 19 view .LVU230
 1154 0312 3846     		mov	r0, r7
 1155              	.LBE767:
 1156              	.LBE766:
  45:src/theory.cpp **** Chord *flat9chord = new Chord({0, 4, 7, 10, 13, 17, 21}, "7b9", mixolydianFlat2Scale);
 1157              		.loc 7 45 8 view .LVU231
 1158 0314 2F46     		mov	r7, r5
 1159              	.LVL73:
 1160              	.LBB772:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 68


 1161              	.LBB771:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1162              		.loc 2 671 19 view .LVU232
 1163 0316 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1164              	.LVL74:
 1165              	.LBB768:
 1166              	.LBI768:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1167              		.loc 2 158 14 is_stmt 1 view .LVU233
 1168              	.LBB769:
 1169              	.LBI769:
 1170              		.loc 3 182 7 view .LVU234
 1171              	.LBB770:
 1172              	.LBI770:
 1173              		.loc 4 89 7 view .LVU235
 1174              		.loc 4 89 7 is_stmt 0 view .LVU236
 1175              	.LBE770:
 1176              	.LBE769:
 1177              	.LBE768:
 1178              	.LBE771:
 1179              	.LBE772:
 1180              	.LBB773:
 1181              	.LBI773:
 1182              		.loc 3 182 7 is_stmt 1 view .LVU237
 1183              	.LBB774:
 1184              	.LBI774:
 1185              		.loc 4 89 7 view .LVU238
 1186              		.loc 4 89 7 is_stmt 0 view .LVU239
 1187              	.LBE774:
 1188              	.LBE773:
  45:src/theory.cpp **** Chord *flat9chord = new Chord({0, 4, 7, 10, 13, 17, 21}, "7b9", mixolydianFlat2Scale);
 1189              		.loc 7 45 8 view .LVU240
 1190 031a 06F1A80C 		add	ip, r6, #168
 1191 031e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1192 0322 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1193 0324 9CE80700 		ldm	ip, {r0, r1, r2}
 1194 0328 87E80700 		stm	r7, {r0, r1, r2}
 1195              	.LVL75:
 1196              	.LBB775:
 1197              	.LBI775:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1198              		.loc 3 164 7 is_stmt 1 view .LVU241
 1199              	.LBB776:
 1200              	.LBI776:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1201              		.loc 4 79 7 view .LVU242
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1202              		.loc 4 79 7 is_stmt 0 view .LVU243
 1203              	.LBE776:
 1204              	.LBE775:
  45:src/theory.cpp **** Chord *flat9chord = new Chord({0, 4, 7, 10, 13, 17, 21}, "7b9", mixolydianFlat2Scale);
 1205              		.loc 7 45 8 view .LVU244
 1206 032c 13AF     		add	r7, sp, #76
 1207 032e 1A49     		ldr	r1, .L12+52
 1208 0330 3846     		mov	r0, r7
 1209 0332 20AF     		add	r7, sp, #128
 1210 0334 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 69


 1211              	.LVL76:
 1212 0338 DFF884C0 		ldr	ip, .L12+92
 1213 033c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1214 0340 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1215 0342 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1216 0346 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1217 0348 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1218 034c 87E80F00 		stm	r7, {r0, r1, r2, r3}
  45:src/theory.cpp **** Chord *flat9chord = new Chord({0, 4, 7, 10, 13, 17, 21}, "7b9", mixolydianFlat2Scale);
 1219              		.loc 7 45 85 view .LVU245
 1220 0350 6420     		movs	r0, #100
 1221 0352 FFF7FEFF 		bl	_Znwj
 1222              	.LVL77:
 1223 0356 0DF1800E 		add	lr, sp, #128
 1224 035a 0746     		mov	r7, r0
 1225 035c 0DF1140C 		add	ip, sp, #20
 1226 0360 30E0     		b	.L13
 1227              	.L14:
 1228 0362 00BF     		.align	2
 1229              	.L12:
 1230 0364 00000000 		.word	.LANCHOR0
 1231 0368 00000000 		.word	.LC14
 1232 036c 00000000 		.word	.LANCHOR2
 1233 0370 05000000 		.word	.LC15
 1234 0374 00000000 		.word	.LANCHOR4
 1235 0378 0A000000 		.word	.LC16
 1236 037c 00000000 		.word	.LANCHOR5
 1237 0380 0C000000 		.word	.LC17
 1238 0384 00000000 		.word	.LANCHOR7
 1239 0388 11000000 		.word	.LC18
 1240 038c 00000000 		.word	.LANCHOR9
 1241 0390 13000000 		.word	.LC19
 1242 0394 00000000 		.word	.LANCHOR11
 1243 0398 1C000000 		.word	.LC20
 1244 039c 00000000 		.word	.LANCHOR1
 1245 03a0 00000000 		.word	.LANCHOR17
 1246 03a4 00000000 		.word	.LANCHOR19
 1247 03a8 00000000 		.word	.LANCHOR3
 1248 03ac 00000000 		.word	.LANCHOR21
 1249 03b0 00000000 		.word	.LANCHOR23
 1250 03b4 00000000 		.word	.LANCHOR6
 1251 03b8 00000000 		.word	.LANCHOR8
 1252 03bc 00000000 		.word	.LANCHOR10
 1253 03c0 00000000 		.word	.LANCHOR12
 1254              	.L13:
 1255 03c4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1256 03c8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1257 03cc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1258 03d0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1259 03d4 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1260 03d8 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1261 03dc 13A8     		add	r0, sp, #76
 1262 03de 0490     		str	r0, [sp, #16]
 1263 03e0 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1264 03e4 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1265 03e8 95E80E00 		ldm	r5, {r1, r2, r3}
 1266 03ec 3846     		mov	r0, r7
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 70


 1267 03ee FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1268              	.LVL78:
  45:src/theory.cpp **** Chord *flat9chord = new Chord({0, 4, 7, 10, 13, 17, 21}, "7b9", mixolydianFlat2Scale);
 1269              		.loc 7 45 8 view .LVU246
 1270 03f2 D748     		ldr	r0, .L15
 1271 03f4 0760     		str	r7, [r0]
 1272              	.LVL79:
 1273              	.LBB777:
 1274              	.LBI777:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1275              		.loc 2 670 7 is_stmt 1 view .LVU247
 1276              	.LBB778:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1277              		.loc 2 671 19 is_stmt 0 view .LVU248
 1278 03f6 13AF     		add	r7, sp, #76
 1279              	.LVL80:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1280              		.loc 2 671 19 view .LVU249
 1281 03f8 3846     		mov	r0, r7
 1282              	.LBE778:
 1283              	.LBE777:
  46:src/theory.cpp **** Chord *sharp9chord = new Chord({0, 4, 7, 10, 15, 17, 21}, "7#9", alteredScale);
 1284              		.loc 7 46 8 view .LVU250
 1285 03fa 2F46     		mov	r7, r5
 1286              	.LVL81:
 1287              	.LBB783:
 1288              	.LBB782:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1289              		.loc 2 671 19 view .LVU251
 1290 03fc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1291              	.LVL82:
 1292              	.LBB779:
 1293              	.LBI779:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1294              		.loc 2 158 14 is_stmt 1 view .LVU252
 1295              	.LBB780:
 1296              	.LBI780:
 1297              		.loc 3 182 7 view .LVU253
 1298              	.LBB781:
 1299              	.LBI781:
 1300              		.loc 4 89 7 view .LVU254
 1301              		.loc 4 89 7 is_stmt 0 view .LVU255
 1302              	.LBE781:
 1303              	.LBE780:
 1304              	.LBE779:
 1305              	.LBE782:
 1306              	.LBE783:
 1307              	.LBB784:
 1308              	.LBI784:
 1309              		.loc 3 182 7 is_stmt 1 view .LVU256
 1310              	.LBB785:
 1311              	.LBI785:
 1312              		.loc 4 89 7 view .LVU257
 1313              		.loc 4 89 7 is_stmt 0 view .LVU258
 1314              	.LBE785:
 1315              	.LBE784:
  46:src/theory.cpp **** Chord *sharp9chord = new Chord({0, 4, 7, 10, 15, 17, 21}, "7#9", alteredScale);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 71


 1316              		.loc 7 46 8 view .LVU259
 1317 0400 06F1C40C 		add	ip, r6, #196
 1318 0404 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1319 0408 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1320 040a 9CE80700 		ldm	ip, {r0, r1, r2}
 1321 040e 87E80700 		stm	r7, {r0, r1, r2}
 1322              	.LVL83:
 1323              	.LBB786:
 1324              	.LBI786:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1325              		.loc 3 164 7 is_stmt 1 view .LVU260
 1326              	.LBB787:
 1327              	.LBI787:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1328              		.loc 4 79 7 view .LVU261
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1329              		.loc 4 79 7 is_stmt 0 view .LVU262
 1330              	.LBE787:
 1331              	.LBE786:
  46:src/theory.cpp **** Chord *sharp9chord = new Chord({0, 4, 7, 10, 15, 17, 21}, "7#9", alteredScale);
 1332              		.loc 7 46 8 view .LVU263
 1333 0412 13AF     		add	r7, sp, #76
 1334 0414 CF49     		ldr	r1, .L15+4
 1335 0416 3846     		mov	r0, r7
 1336 0418 20AF     		add	r7, sp, #128
 1337 041a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1338              	.LVL84:
 1339 041e DFF87CC3 		ldr	ip, .L15+76
 1340 0422 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1341 0426 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1342 0428 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1343 042c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1344 042e 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1345 0432 87E80F00 		stm	r7, {r0, r1, r2, r3}
  46:src/theory.cpp **** Chord *sharp9chord = new Chord({0, 4, 7, 10, 15, 17, 21}, "7#9", alteredScale);
 1346              		.loc 7 46 85 view .LVU264
 1347 0436 6420     		movs	r0, #100
 1348 0438 FFF7FEFF 		bl	_Znwj
 1349              	.LVL85:
 1350 043c 0DF1800E 		add	lr, sp, #128
 1351 0440 0746     		mov	r7, r0
 1352 0442 0DF1140C 		add	ip, sp, #20
 1353 0446 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1354 044a ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1355 044e BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1356 0452 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1357 0456 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1358 045a 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1359 045e 13AB     		add	r3, sp, #76
 1360 0460 0493     		str	r3, [sp, #16]
 1361 0462 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1362 0466 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1363 046a 95E80E00 		ldm	r5, {r1, r2, r3}
 1364 046e 3846     		mov	r0, r7
 1365 0470 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1366              	.LVL86:
  46:src/theory.cpp **** Chord *sharp9chord = new Chord({0, 4, 7, 10, 15, 17, 21}, "7#9", alteredScale);
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 72


 1367              		.loc 7 46 8 view .LVU265
 1368 0474 B84B     		ldr	r3, .L15+8
 1369 0476 1F60     		str	r7, [r3]
 1370              	.LVL87:
 1371              	.LBB788:
 1372              	.LBI788:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1373              		.loc 2 670 7 is_stmt 1 view .LVU266
 1374              	.LBB789:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1375              		.loc 2 671 19 is_stmt 0 view .LVU267
 1376 0478 13AF     		add	r7, sp, #76
 1377              	.LVL88:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1378              		.loc 2 671 19 view .LVU268
 1379 047a 3846     		mov	r0, r7
 1380              	.LBE789:
 1381              	.LBE788:
  47:src/theory.cpp **** Chord *sharp11chord = new Chord({0, 4, 7, 11, 14, 18, 21}, "maj7#11", lydianScale);
 1382              		.loc 7 47 8 view .LVU269
 1383 047c 2F46     		mov	r7, r5
 1384              	.LVL89:
 1385              	.LBB794:
 1386              	.LBB793:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1387              		.loc 2 671 19 view .LVU270
 1388 047e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1389              	.LVL90:
 1390              	.LBB790:
 1391              	.LBI790:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1392              		.loc 2 158 14 is_stmt 1 view .LVU271
 1393              	.LBB791:
 1394              	.LBI791:
 1395              		.loc 3 182 7 view .LVU272
 1396              	.LBB792:
 1397              	.LBI792:
 1398              		.loc 4 89 7 view .LVU273
 1399              		.loc 4 89 7 is_stmt 0 view .LVU274
 1400              	.LBE792:
 1401              	.LBE791:
 1402              	.LBE790:
 1403              	.LBE793:
 1404              	.LBE794:
 1405              	.LBB795:
 1406              	.LBI795:
 1407              		.loc 3 182 7 is_stmt 1 view .LVU275
 1408              	.LBB796:
 1409              	.LBI796:
 1410              		.loc 4 89 7 view .LVU276
 1411              		.loc 4 89 7 is_stmt 0 view .LVU277
 1412              	.LBE796:
 1413              	.LBE795:
  47:src/theory.cpp **** Chord *sharp11chord = new Chord({0, 4, 7, 11, 14, 18, 21}, "maj7#11", lydianScale);
 1414              		.loc 7 47 8 view .LVU278
 1415 0482 06F1E00C 		add	ip, r6, #224
 1416 0486 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 73


 1417 048a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1418 048c 9CE80700 		ldm	ip, {r0, r1, r2}
 1419 0490 87E80700 		stm	r7, {r0, r1, r2}
 1420              	.LVL91:
 1421              	.LBB797:
 1422              	.LBI797:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1423              		.loc 3 164 7 is_stmt 1 view .LVU279
 1424              	.LBB798:
 1425              	.LBI798:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1426              		.loc 4 79 7 view .LVU280
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1427              		.loc 4 79 7 is_stmt 0 view .LVU281
 1428              	.LBE798:
 1429              	.LBE797:
  47:src/theory.cpp **** Chord *sharp11chord = new Chord({0, 4, 7, 11, 14, 18, 21}, "maj7#11", lydianScale);
 1430              		.loc 7 47 8 view .LVU282
 1431 0494 13AF     		add	r7, sp, #76
 1432 0496 B149     		ldr	r1, .L15+12
 1433 0498 3846     		mov	r0, r7
 1434 049a 20AF     		add	r7, sp, #128
 1435 049c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1436              	.LVL92:
 1437 04a0 DFF8FCC2 		ldr	ip, .L15+80
 1438 04a4 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1439 04a8 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1440 04aa BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1441 04ae 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1442 04b0 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1443 04b4 87E80F00 		stm	r7, {r0, r1, r2, r3}
  47:src/theory.cpp **** Chord *sharp11chord = new Chord({0, 4, 7, 11, 14, 18, 21}, "maj7#11", lydianScale);
 1444              		.loc 7 47 78 view .LVU283
 1445 04b8 6420     		movs	r0, #100
 1446 04ba FFF7FEFF 		bl	_Znwj
 1447              	.LVL93:
 1448 04be 0DF1800E 		add	lr, sp, #128
 1449 04c2 0746     		mov	r7, r0
 1450 04c4 0DF1140C 		add	ip, sp, #20
 1451 04c8 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1452 04cc ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1453 04d0 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1454 04d4 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1455 04d8 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1456 04dc 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1457 04e0 13AB     		add	r3, sp, #76
 1458 04e2 0493     		str	r3, [sp, #16]
 1459 04e4 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1460 04e8 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1461 04ec 95E80E00 		ldm	r5, {r1, r2, r3}
 1462 04f0 3846     		mov	r0, r7
 1463 04f2 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1464              	.LVL94:
  47:src/theory.cpp **** Chord *sharp11chord = new Chord({0, 4, 7, 11, 14, 18, 21}, "maj7#11", lydianScale);
 1465              		.loc 7 47 8 view .LVU284
 1466 04f6 CBF80070 		str	r7, [fp]
 1467              	.LVL95:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 74


 1468              	.LBB799:
 1469              	.LBI799:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1470              		.loc 2 670 7 is_stmt 1 view .LVU285
 1471              	.LBB800:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1472              		.loc 2 671 19 is_stmt 0 view .LVU286
 1473 04fa 13AF     		add	r7, sp, #76
 1474              	.LVL96:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1475              		.loc 2 671 19 view .LVU287
 1476 04fc 3846     		mov	r0, r7
 1477              	.LBE800:
 1478              	.LBE799:
  48:src/theory.cpp **** Chord *dominantSharp11chord = new Chord({0, 4, 7, 10, 14, 18, 21}, "7#11", lydianDominantScale);
 1479              		.loc 7 48 8 view .LVU288
 1480 04fe 2F46     		mov	r7, r5
 1481              	.LVL97:
 1482              	.LBB805:
 1483              	.LBB804:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1484              		.loc 2 671 19 view .LVU289
 1485 0500 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1486              	.LVL98:
 1487              	.LBB801:
 1488              	.LBI801:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1489              		.loc 2 158 14 is_stmt 1 view .LVU290
 1490              	.LBB802:
 1491              	.LBI802:
 1492              		.loc 3 182 7 view .LVU291
 1493              	.LBB803:
 1494              	.LBI803:
 1495              		.loc 4 89 7 view .LVU292
 1496              		.loc 4 89 7 is_stmt 0 view .LVU293
 1497              	.LBE803:
 1498              	.LBE802:
 1499              	.LBE801:
 1500              	.LBE804:
 1501              	.LBE805:
 1502              	.LBB806:
 1503              	.LBI806:
 1504              		.loc 3 182 7 is_stmt 1 view .LVU294
 1505              	.LBB807:
 1506              	.LBI807:
 1507              		.loc 4 89 7 view .LVU295
 1508              		.loc 4 89 7 is_stmt 0 view .LVU296
 1509              	.LBE807:
 1510              	.LBE806:
  48:src/theory.cpp **** Chord *dominantSharp11chord = new Chord({0, 4, 7, 10, 14, 18, 21}, "7#11", lydianDominantScale);
 1511              		.loc 7 48 8 view .LVU297
 1512 0504 06F1FC0C 		add	ip, r6, #252
 1513 0508 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1514 050c 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1515 050e 9CE80700 		ldm	ip, {r0, r1, r2}
 1516 0512 87E80700 		stm	r7, {r0, r1, r2}
 1517              	.LVL99:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 75


 1518              	.LBB808:
 1519              	.LBI808:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1520              		.loc 3 164 7 is_stmt 1 view .LVU298
 1521              	.LBB809:
 1522              	.LBI809:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1523              		.loc 4 79 7 view .LVU299
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1524              		.loc 4 79 7 is_stmt 0 view .LVU300
 1525              	.LBE809:
 1526              	.LBE808:
  48:src/theory.cpp **** Chord *dominantSharp11chord = new Chord({0, 4, 7, 10, 14, 18, 21}, "7#11", lydianDominantScale);
 1527              		.loc 7 48 8 view .LVU301
 1528 0516 13AF     		add	r7, sp, #76
 1529 0518 9149     		ldr	r1, .L15+16
 1530 051a 3846     		mov	r0, r7
 1531 051c 20AF     		add	r7, sp, #128
 1532 051e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1533              	.LVL100:
 1534 0522 DFF880C2 		ldr	ip, .L15+84
 1535 0526 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1536 052a 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1537 052c BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1538 0530 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1539 0532 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1540 0536 87E80F00 		stm	r7, {r0, r1, r2, r3}
  48:src/theory.cpp **** Chord *dominantSharp11chord = new Chord({0, 4, 7, 10, 14, 18, 21}, "7#11", lydianDominantScale);
 1541              		.loc 7 48 82 view .LVU302
 1542 053a 6420     		movs	r0, #100
 1543 053c FFF7FEFF 		bl	_Znwj
 1544              	.LVL101:
 1545 0540 0DF1800E 		add	lr, sp, #128
 1546 0544 0746     		mov	r7, r0
 1547 0546 0DF1140C 		add	ip, sp, #20
 1548 054a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1549 054e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1550 0552 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1551 0556 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1552 055a 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1553 055e 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1554 0562 13AB     		add	r3, sp, #76
 1555 0564 0493     		str	r3, [sp, #16]
 1556 0566 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1557 056a 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1558 056e 95E80E00 		ldm	r5, {r1, r2, r3}
 1559 0572 3846     		mov	r0, r7
 1560 0574 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1561              	.LVL102:
  48:src/theory.cpp **** Chord *dominantSharp11chord = new Chord({0, 4, 7, 10, 14, 18, 21}, "7#11", lydianDominantScale);
 1562              		.loc 7 48 8 view .LVU303
 1563 0578 CAF80070 		str	r7, [r10]
 1564              	.LVL103:
 1565              	.LBB810:
 1566              	.LBI810:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1567              		.loc 2 670 7 is_stmt 1 view .LVU304
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 76


 1568              	.LBB811:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1569              		.loc 2 671 19 is_stmt 0 view .LVU305
 1570 057c 13AF     		add	r7, sp, #76
 1571              	.LVL104:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1572              		.loc 2 671 19 view .LVU306
 1573 057e 3846     		mov	r0, r7
 1574              	.LBE811:
 1575              	.LBE810:
  49:src/theory.cpp **** Chord *flat13chord = new Chord({0, 4, 7, 10, 14, 17, 20}, "7b13", mixolydianFlat13Scale);
 1576              		.loc 7 49 8 view .LVU307
 1577 0580 2F46     		mov	r7, r5
 1578              	.LVL105:
 1579              	.LBB816:
 1580              	.LBB815:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1581              		.loc 2 671 19 view .LVU308
 1582 0582 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1583              	.LVL106:
 1584              	.LBB812:
 1585              	.LBI812:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1586              		.loc 2 158 14 is_stmt 1 view .LVU309
 1587              	.LBB813:
 1588              	.LBI813:
 1589              		.loc 3 182 7 view .LVU310
 1590              	.LBB814:
 1591              	.LBI814:
 1592              		.loc 4 89 7 view .LVU311
 1593              		.loc 4 89 7 is_stmt 0 view .LVU312
 1594              	.LBE814:
 1595              	.LBE813:
 1596              	.LBE812:
 1597              	.LBE815:
 1598              	.LBE816:
 1599              	.LBB817:
 1600              	.LBI817:
 1601              		.loc 3 182 7 is_stmt 1 view .LVU313
 1602              	.LBB818:
 1603              	.LBI818:
 1604              		.loc 4 89 7 view .LVU314
 1605              		.loc 4 89 7 is_stmt 0 view .LVU315
 1606              	.LBE818:
 1607              	.LBE817:
  49:src/theory.cpp **** Chord *flat13chord = new Chord({0, 4, 7, 10, 14, 17, 20}, "7b13", mixolydianFlat13Scale);
 1608              		.loc 7 49 8 view .LVU316
 1609 0586 06F58C7C 		add	ip, r6, #280
 1610 058a BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1611 058e 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1612 0590 9CE80700 		ldm	ip, {r0, r1, r2}
 1613 0594 87E80700 		stm	r7, {r0, r1, r2}
 1614              	.LVL107:
 1615              	.LBB819:
 1616              	.LBI819:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1617              		.loc 3 164 7 is_stmt 1 view .LVU317
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 77


 1618              	.LBB820:
 1619              	.LBI820:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1620              		.loc 4 79 7 view .LVU318
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1621              		.loc 4 79 7 is_stmt 0 view .LVU319
 1622              	.LBE820:
 1623              	.LBE819:
  49:src/theory.cpp **** Chord *flat13chord = new Chord({0, 4, 7, 10, 14, 17, 20}, "7b13", mixolydianFlat13Scale);
 1624              		.loc 7 49 8 view .LVU320
 1625 0598 13AF     		add	r7, sp, #76
 1626 059a 7249     		ldr	r1, .L15+20
 1627 059c 3846     		mov	r0, r7
 1628 059e 20AF     		add	r7, sp, #128
 1629 05a0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1630              	.LVL108:
 1631 05a4 DFF800C2 		ldr	ip, .L15+88
 1632 05a8 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1633 05ac 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1634 05ae BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1635 05b2 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1636 05b4 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1637 05b8 87E80F00 		stm	r7, {r0, r1, r2, r3}
  49:src/theory.cpp **** Chord *flat13chord = new Chord({0, 4, 7, 10, 14, 17, 20}, "7b13", mixolydianFlat13Scale);
 1638              		.loc 7 49 95 view .LVU321
 1639 05bc 6420     		movs	r0, #100
 1640 05be FFF7FEFF 		bl	_Znwj
 1641              	.LVL109:
 1642 05c2 0DF1800E 		add	lr, sp, #128
 1643 05c6 0746     		mov	r7, r0
 1644 05c8 0DF1140C 		add	ip, sp, #20
 1645 05cc BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1646 05d0 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1647 05d4 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1648 05d8 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1649 05dc 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1650 05e0 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1651 05e4 13AB     		add	r3, sp, #76
 1652 05e6 0493     		str	r3, [sp, #16]
 1653 05e8 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1654 05ec 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1655 05f0 95E80E00 		ldm	r5, {r1, r2, r3}
 1656 05f4 3846     		mov	r0, r7
 1657 05f6 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1658              	.LVL110:
  49:src/theory.cpp **** Chord *flat13chord = new Chord({0, 4, 7, 10, 14, 17, 20}, "7b13", mixolydianFlat13Scale);
 1659              		.loc 7 49 8 view .LVU322
 1660 05fa C9F80070 		str	r7, [r9]
 1661              	.LVL111:
 1662              	.LBB821:
 1663              	.LBI821:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1664              		.loc 2 670 7 is_stmt 1 view .LVU323
 1665              	.LBB822:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1666              		.loc 2 671 19 is_stmt 0 view .LVU324
 1667 05fe 13AF     		add	r7, sp, #76
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 78


 1668              	.LVL112:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1669              		.loc 2 671 19 view .LVU325
 1670 0600 3846     		mov	r0, r7
 1671              	.LBE822:
 1672              	.LBE821:
  50:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
 1673              		.loc 7 50 8 view .LVU326
 1674 0602 2F46     		mov	r7, r5
 1675              	.LVL113:
 1676              	.LBB827:
 1677              	.LBB826:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1678              		.loc 2 671 19 view .LVU327
 1679 0604 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1680              	.LVL114:
 1681              	.LBB823:
 1682              	.LBI823:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1683              		.loc 2 158 14 is_stmt 1 view .LVU328
 1684              	.LBB824:
 1685              	.LBI824:
 1686              		.loc 3 182 7 view .LVU329
 1687              	.LBB825:
 1688              	.LBI825:
 1689              		.loc 4 89 7 view .LVU330
 1690              		.loc 4 89 7 is_stmt 0 view .LVU331
 1691              	.LBE825:
 1692              	.LBE824:
 1693              	.LBE823:
 1694              	.LBE826:
 1695              	.LBE827:
 1696              	.LBB828:
 1697              	.LBI828:
 1698              		.loc 3 182 7 is_stmt 1 view .LVU332
 1699              	.LBB829:
 1700              	.LBI829:
 1701              		.loc 4 89 7 view .LVU333
 1702              		.loc 4 89 7 is_stmt 0 view .LVU334
 1703              	.LBE829:
 1704              	.LBE828:
  50:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
 1705              		.loc 7 50 8 view .LVU335
 1706 0608 06F59A7C 		add	ip, r6, #308
  51:src/theory.cpp **** 
 1707              		.loc 7 51 8 view .LVU336
 1708 060c 06F5A876 		add	r6, r6, #336
  50:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
 1709              		.loc 7 50 8 view .LVU337
 1710 0610 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1711 0614 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1712 0616 9CE80700 		ldm	ip, {r0, r1, r2}
 1713 061a 87E80700 		stm	r7, {r0, r1, r2}
 1714              	.LVL115:
 1715              	.LBB830:
 1716              	.LBI830:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 79


 1717              		.loc 3 164 7 is_stmt 1 view .LVU338
 1718              	.LBB831:
 1719              	.LBI831:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1720              		.loc 4 79 7 view .LVU339
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1721              		.loc 4 79 7 is_stmt 0 view .LVU340
 1722              	.LBE831:
 1723              	.LBE830:
  50:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
 1724              		.loc 7 50 8 view .LVU341
 1725 061e 13AF     		add	r7, sp, #76
 1726 0620 5149     		ldr	r1, .L15+24
 1727 0622 3846     		mov	r0, r7
 1728 0624 20AF     		add	r7, sp, #128
 1729 0626 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1730              	.LVL116:
 1731 062a DFF880C1 		ldr	ip, .L15+92
 1732 062e BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1733 0632 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1734 0634 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1735 0638 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1736 063a 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1737 063e 87E80F00 		stm	r7, {r0, r1, r2, r3}
  50:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
 1738              		.loc 7 50 88 view .LVU342
 1739 0642 6420     		movs	r0, #100
 1740 0644 FFF7FEFF 		bl	_Znwj
 1741              	.LVL117:
 1742 0648 0DF1800E 		add	lr, sp, #128
 1743 064c 0746     		mov	r7, r0
 1744 064e 0DF1140C 		add	ip, sp, #20
 1745 0652 BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1746 0656 ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1747 065a BEE80F00 		ldmia	lr!, {r0, r1, r2, r3}
 1748 065e ACE80F00 		stmia	ip!, {r0, r1, r2, r3}
 1749 0662 9EE80F00 		ldm	lr, {r0, r1, r2, r3}
 1750 0666 8CE80F00 		stm	ip, {r0, r1, r2, r3}
 1751 066a 13AB     		add	r3, sp, #76
 1752 066c 0493     		str	r3, [sp, #16]
 1753 066e 94E80F00 		ldm	r4, {r0, r1, r2, r3}
 1754 0672 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1755 0676 95E80E00 		ldm	r5, {r1, r2, r3}
 1756 067a 3846     		mov	r0, r7
 1757 067c FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1758              	.LVL118:
  50:src/theory.cpp **** Chord *augmentedChord = new Chord({0, 4, 8, 10, 14, 17, 21}, "aug", augmentedScale);
 1759              		.loc 7 50 8 view .LVU343
 1760 0680 C8F80070 		str	r7, [r8]
 1761              	.LVL119:
 1762              	.LBB832:
 1763              	.LBI832:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1764              		.loc 2 670 7 is_stmt 1 view .LVU344
 1765              	.LBB833:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1766              		.loc 2 671 19 is_stmt 0 view .LVU345
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 80


 1767 0684 13AF     		add	r7, sp, #76
 1768              	.LVL120:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1769              		.loc 2 671 19 view .LVU346
 1770 0686 3846     		mov	r0, r7
 1771              	.LBE833:
 1772              	.LBE832:
  51:src/theory.cpp **** 
 1773              		.loc 7 51 8 view .LVU347
 1774 0688 2F46     		mov	r7, r5
 1775              	.LVL121:
 1776              	.LBB838:
 1777              	.LBB837:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1778              		.loc 2 671 19 view .LVU348
 1779 068a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1780              	.LVL122:
 1781              	.LBB834:
 1782              	.LBI834:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1783              		.loc 2 158 14 is_stmt 1 view .LVU349
 1784              	.LBB835:
 1785              	.LBI835:
 1786              		.loc 3 182 7 view .LVU350
 1787              	.LBB836:
 1788              	.LBI836:
 1789              		.loc 4 89 7 view .LVU351
 1790              		.loc 4 89 7 is_stmt 0 view .LVU352
 1791              	.LBE836:
 1792              	.LBE835:
 1793              	.LBE834:
 1794              	.LBE837:
 1795              	.LBE838:
 1796              	.LBB839:
 1797              	.LBI839:
 1798              		.loc 3 182 7 is_stmt 1 view .LVU353
 1799              	.LBB840:
 1800              	.LBI840:
 1801              		.loc 4 89 7 view .LVU354
 1802              		.loc 4 89 7 is_stmt 0 view .LVU355
 1803              	.LBE840:
 1804              	.LBE839:
  51:src/theory.cpp **** 
 1805              		.loc 7 51 8 view .LVU356
 1806 068e 0FCE     		ldmia	r6!, {r0, r1, r2, r3}
 1807 0690 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1808 0692 96E80700 		ldm	r6, {r0, r1, r2}
 1809 0696 13AE     		add	r6, sp, #76
 1810 0698 87E80700 		stm	r7, {r0, r1, r2}
 1811              	.LVL123:
 1812              	.LBB841:
 1813              	.LBI841:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1814              		.loc 3 164 7 is_stmt 1 view .LVU357
 1815              	.LBB842:
 1816              	.LBI842:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 81


 1817              		.loc 4 79 7 view .LVU358
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1818              		.loc 4 79 7 is_stmt 0 view .LVU359
 1819              	.LBE842:
 1820              	.LBE841:
  51:src/theory.cpp **** 
 1821              		.loc 7 51 8 view .LVU360
 1822 069c 334F     		ldr	r7, .L15+28
 1823 069e 3046     		mov	r0, r6
 1824 06a0 3349     		ldr	r1, .L15+32
 1825 06a2 20AE     		add	r6, sp, #128
 1826 06a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1827              	.LVL124:
 1828 06a8 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 1829 06aa 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1830 06ac 0FCF     		ldmia	r7!, {r0, r1, r2, r3}
 1831 06ae 0FC6     		stmia	r6!, {r0, r1, r2, r3}
 1832 06b0 97E80F00 		ldm	r7, {r0, r1, r2, r3}
 1833 06b4 86E80F00 		stm	r6, {r0, r1, r2, r3}
  51:src/theory.cpp **** 
 1834              		.loc 7 51 83 view .LVU361
 1835 06b8 6420     		movs	r0, #100
 1836 06ba 05AF     		add	r7, sp, #20
 1837 06bc FFF7FEFF 		bl	_Znwj
 1838              	.LVL125:
 1839 06c0 0DF1800C 		add	ip, sp, #128
 1840 06c4 0646     		mov	r6, r0
 1841 06c6 BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1842 06ca 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1843 06cc BCE80F00 		ldmia	ip!, {r0, r1, r2, r3}
 1844 06d0 0FC7     		stmia	r7!, {r0, r1, r2, r3}
 1845 06d2 9CE80F00 		ldm	ip, {r0, r1, r2, r3}
 1846 06d6 87E80F00 		stm	r7, {r0, r1, r2, r3}
 1847 06da 13AF     		add	r7, sp, #76
 1848 06dc 0497     		str	r7, [sp, #16]
 1849 06de 94E80F00 		ldm	r4, {r0, r1, r2, r3}
  54:src/theory.cpp **** 
 1850              		.loc 7 54 102 view .LVU362
 1851 06e2 244C     		ldr	r4, .L15+36
  51:src/theory.cpp **** 
 1852              		.loc 7 51 83 view .LVU363
 1853 06e4 8DE80F00 		stm	sp, {r0, r1, r2, r3}
 1854 06e8 95E80E00 		ldm	r5, {r1, r2, r3}
 1855 06ec 3046     		mov	r0, r6
  51:src/theory.cpp **** 
 1856              		.loc 7 51 8 view .LVU364
 1857 06ee 224D     		ldr	r5, .L15+40
  51:src/theory.cpp **** 
 1858              		.loc 7 51 83 view .LVU365
 1859 06f0 FFF7FEFF 		bl	_ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
 1860              	.LVL126:
 1861              	.LBB843:
 1862              	.LBB844:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1863              		.loc 2 671 19 view .LVU366
 1864 06f4 3846     		mov	r0, r7
 1865              	.LBE844:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 82


 1866              	.LBE843:
  51:src/theory.cpp **** 
 1867              		.loc 7 51 8 view .LVU367
 1868 06f6 2E60     		str	r6, [r5]
 1869              	.LVL127:
 1870              	.LBB849:
 1871              	.LBI843:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 1872              		.loc 2 670 7 is_stmt 1 view .LVU368
 1873              	.LBB848:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 1874              		.loc 2 671 19 is_stmt 0 view .LVU369
 1875 06f8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1876              	.LVL128:
 1877              	.LBB845:
 1878              	.LBI845:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 1879              		.loc 2 158 14 is_stmt 1 view .LVU370
 1880              	.LBB846:
 1881              	.LBI846:
 1882              		.loc 3 182 7 view .LVU371
 1883              	.LBB847:
 1884              	.LBI847:
 1885              		.loc 4 89 7 view .LVU372
 1886              		.loc 4 89 7 is_stmt 0 view .LVU373
 1887              	.LBE847:
 1888              	.LBE846:
 1889              	.LBE845:
 1890              	.LBE848:
 1891              	.LBE849:
 1892              	.LBB850:
 1893              	.LBI850:
 1894              		.loc 3 182 7 is_stmt 1 view .LVU374
 1895              	.LBB851:
 1896              	.LBI851:
 1897              		.loc 4 89 7 view .LVU375
 1898              		.loc 4 89 7 is_stmt 0 view .LVU376
 1899              	.LBE851:
 1900              	.LBE850:
 1901              	.LBB852:
 1902              	.LBI852:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1903              		.loc 3 164 7 is_stmt 1 view .LVU377
 1904              	.LBB853:
 1905              	.LBI853:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1906              		.loc 4 79 7 view .LVU378
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1907              		.loc 4 79 7 is_stmt 0 view .LVU379
 1908              	.LBE853:
 1909              	.LBE852:
  54:src/theory.cpp **** 
 1910              		.loc 7 54 102 view .LVU380
 1911 06fc 2046     		mov	r0, r4
 1912 06fe 1F49     		ldr	r1, .L15+44
 1913 0700 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1914              	.LVL129:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 83


 1915              	.LBB854:
 1916              	.LBI854:
 1917              		.loc 3 182 7 is_stmt 1 view .LVU381
 1918              	.LBB855:
 1919              	.LBI855:
 1920              		.loc 4 89 7 view .LVU382
 1921              		.loc 4 89 7 is_stmt 0 view .LVU383
 1922              	.LBE855:
 1923              	.LBE854:
 1924              	.LBB856:
 1925              	.LBI856:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1926              		.loc 3 164 7 is_stmt 1 view .LVU384
 1927              	.LBB857:
 1928              	.LBI857:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1929              		.loc 4 79 7 view .LVU385
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1930              		.loc 4 79 7 is_stmt 0 view .LVU386
 1931              	.LBE857:
 1932              	.LBE856:
  54:src/theory.cpp **** 
 1933              		.loc 7 54 102 view .LVU387
 1934 0704 04F11800 		add	r0, r4, #24
 1935 0708 1D49     		ldr	r1, .L15+48
 1936 070a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1937              	.LVL130:
 1938              	.LBB858:
 1939              	.LBI858:
 1940              		.loc 3 182 7 is_stmt 1 view .LVU388
 1941              	.LBB859:
 1942              	.LBI859:
 1943              		.loc 4 89 7 view .LVU389
 1944              		.loc 4 89 7 is_stmt 0 view .LVU390
 1945              	.LBE859:
 1946              	.LBE858:
 1947              	.LBB860:
 1948              	.LBI860:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1949              		.loc 3 164 7 is_stmt 1 view .LVU391
 1950              	.LBB861:
 1951              	.LBI861:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1952              		.loc 4 79 7 view .LVU392
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1953              		.loc 4 79 7 is_stmt 0 view .LVU393
 1954              	.LBE861:
 1955              	.LBE860:
  54:src/theory.cpp **** 
 1956              		.loc 7 54 102 view .LVU394
 1957 070e 04F13000 		add	r0, r4, #48
 1958 0712 1C49     		ldr	r1, .L15+52
 1959 0714 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1960              	.LVL131:
 1961              	.LBB862:
 1962              	.LBI862:
 1963              		.loc 3 182 7 is_stmt 1 view .LVU395
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 84


 1964              	.LBB863:
 1965              	.LBI863:
 1966              		.loc 4 89 7 view .LVU396
 1967              		.loc 4 89 7 is_stmt 0 view .LVU397
 1968              	.LBE863:
 1969              	.LBE862:
 1970              	.LBB864:
 1971              	.LBI864:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1972              		.loc 3 164 7 is_stmt 1 view .LVU398
 1973              	.LBB865:
 1974              	.LBI865:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1975              		.loc 4 79 7 view .LVU399
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1976              		.loc 4 79 7 is_stmt 0 view .LVU400
 1977              	.LBE865:
 1978              	.LBE864:
  54:src/theory.cpp **** 
 1979              		.loc 7 54 102 view .LVU401
 1980 0718 04F14800 		add	r0, r4, #72
 1981 071c 1A49     		ldr	r1, .L15+56
 1982 071e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 1983              	.LVL132:
 1984              	.LBB866:
 1985              	.LBI866:
 1986              		.loc 3 182 7 is_stmt 1 view .LVU402
 1987              	.LBB867:
 1988              	.LBI867:
 1989              		.loc 4 89 7 view .LVU403
 1990              		.loc 4 89 7 is_stmt 0 view .LVU404
 1991              	.LBE867:
 1992              	.LBE866:
 1993              	.LBB868:
 1994              	.LBI868:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 1995              		.loc 3 164 7 is_stmt 1 view .LVU405
 1996              	.LBB869:
 1997              	.LBI869:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1998              		.loc 4 79 7 view .LVU406
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 1999              		.loc 4 79 7 is_stmt 0 view .LVU407
 2000              	.LBE869:
 2001              	.LBE868:
  54:src/theory.cpp **** 
 2002              		.loc 7 54 102 view .LVU408
 2003 0722 04F16000 		add	r0, r4, #96
 2004 0726 1949     		ldr	r1, .L15+60
 2005 0728 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2006              	.LVL133:
 2007              	.LBB870:
 2008              	.LBI870:
 2009              		.loc 3 182 7 is_stmt 1 view .LVU409
 2010              	.LBB871:
 2011              	.LBI871:
 2012              		.loc 4 89 7 view .LVU410
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 85


 2013              		.loc 4 89 7 is_stmt 0 view .LVU411
 2014              	.LBE871:
 2015              	.LBE870:
 2016              	.LBB872:
 2017              	.LBI872:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 2018              		.loc 3 164 7 is_stmt 1 view .LVU412
 2019              	.LBB873:
 2020              	.LBI873:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2021              		.loc 4 79 7 view .LVU413
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2022              		.loc 4 79 7 is_stmt 0 view .LVU414
 2023              	.LBE873:
 2024              	.LBE872:
  54:src/theory.cpp **** 
 2025              		.loc 7 54 102 view .LVU415
 2026 072c 04F17800 		add	r0, r4, #120
 2027 0730 1749     		ldr	r1, .L15+64
 2028 0732 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2029              	.LVL134:
 2030              	.LBB874:
 2031              	.LBI874:
 2032              		.loc 3 182 7 is_stmt 1 view .LVU416
 2033              	.LBB875:
 2034              	.LBI875:
 2035              		.loc 4 89 7 view .LVU417
 2036              		.loc 4 89 7 is_stmt 0 view .LVU418
 2037              	.LBE875:
 2038              	.LBE874:
 2039              	.LBB876:
 2040              	.LBI876:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 2041              		.loc 3 164 7 is_stmt 1 view .LVU419
 2042              	.LBB877:
 2043              	.LBI877:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2044              		.loc 4 79 7 view .LVU420
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2045              		.loc 4 79 7 is_stmt 0 view .LVU421
 2046              	.LBE877:
 2047              	.LBE876:
  54:src/theory.cpp **** 
 2048              		.loc 7 54 102 view .LVU422
 2049 0736 04F19000 		add	r0, r4, #144
 2050 073a 1649     		ldr	r1, .L15+68
 2051 073c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2052              	.LVL135:
 2053              	.LBB878:
 2054              	.LBI878:
 2055              		.loc 3 182 7 is_stmt 1 view .LVU423
 2056              	.LBB879:
 2057              	.LBI879:
 2058              		.loc 4 89 7 view .LVU424
 2059              		.loc 4 89 7 is_stmt 0 view .LVU425
 2060              	.LBE879:
 2061              	.LBE878:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 86


 2062              	.LBB880:
 2063              	.LBI880:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 2064              		.loc 3 164 7 is_stmt 1 view .LVU426
 2065              	.LBB881:
 2066              	.LBI881:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2067              		.loc 4 79 7 view .LVU427
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2068              		.loc 4 79 7 is_stmt 0 view .LVU428
 2069              	.LBE881:
 2070              	.LBE880:
  54:src/theory.cpp **** 
 2071              		.loc 7 54 102 view .LVU429
 2072 0740 04F1A800 		add	r0, r4, #168
 2073 0744 1449     		ldr	r1, .L15+72
 2074 0746 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2075              	.LVL136:
 2076              	.LBB882:
 2077              	.LBI882:
 2078              		.loc 3 182 7 is_stmt 1 view .LVU430
 2079              	.LBB883:
 2080              	.LBI883:
 2081              		.loc 4 89 7 view .LVU431
 2082              		.loc 4 89 7 is_stmt 0 view .LVU432
 2083              	.LBE883:
 2084              	.LBE882:
 2085              	.LBB884:
 2086              	.LBI884:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 2087              		.loc 3 164 7 is_stmt 1 view .LVU433
 2088              	.LBB885:
 2089              	.LBI885:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2090              		.loc 4 79 7 view .LVU434
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2091              		.loc 4 79 7 is_stmt 0 view .LVU435
 2092              	.LBE885:
 2093              	.LBE884:
  54:src/theory.cpp **** 
 2094              		.loc 7 54 102 view .LVU436
 2095 074a 04F1C000 		add	r0, r4, #192
 2096 074e 2FE0     		b	.L16
 2097              	.L17:
 2098              		.align	2
 2099              	.L15:
 2100 0750 00000000 		.word	.LANCHOR13
 2101 0754 21000000 		.word	.LC21
 2102 0758 00000000 		.word	.LANCHOR15
 2103 075c 25000000 		.word	.LC22
 2104 0760 29000000 		.word	.LC23
 2105 0764 31000000 		.word	.LC24
 2106 0768 36000000 		.word	.LC25
 2107 076c 00000000 		.word	.LANCHOR24
 2108 0770 3B000000 		.word	.LC26
 2109 0774 00000000 		.word	.LANCHOR26
 2110 0778 00000000 		.word	.LANCHOR25
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 87


 2111 077c 3F000000 		.word	.LC27
 2112 0780 41000000 		.word	.LC28
 2113 0784 44000000 		.word	.LC29
 2114 0788 46000000 		.word	.LC30
 2115 078c 49000000 		.word	.LC31
 2116 0790 4B000000 		.word	.LC32
 2117 0794 4D000000 		.word	.LC33
 2118 0798 50000000 		.word	.LC34
 2119 079c 00000000 		.word	.LANCHOR14
 2120 07a0 00000000 		.word	.LANCHOR16
 2121 07a4 00000000 		.word	.LANCHOR18
 2122 07a8 00000000 		.word	.LANCHOR20
 2123 07ac 00000000 		.word	.LANCHOR22
 2124              	.L16:
 2125 07b0 2049     		ldr	r1, .L18
 2126 07b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2127              	.LVL137:
 2128              	.LBB886:
 2129              	.LBI886:
 2130              		.loc 3 182 7 is_stmt 1 view .LVU437
 2131              	.LBB887:
 2132              	.LBI887:
 2133              		.loc 4 89 7 view .LVU438
 2134              		.loc 4 89 7 is_stmt 0 view .LVU439
 2135              	.LBE887:
 2136              	.LBE886:
 2137              	.LBB888:
 2138              	.LBI888:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 2139              		.loc 3 164 7 is_stmt 1 view .LVU440
 2140              	.LBB889:
 2141              	.LBI889:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2142              		.loc 4 79 7 view .LVU441
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2143              		.loc 4 79 7 is_stmt 0 view .LVU442
 2144              	.LBE889:
 2145              	.LBE888:
  54:src/theory.cpp **** 
 2146              		.loc 7 54 102 view .LVU443
 2147 07b6 04F1D800 		add	r0, r4, #216
 2148 07ba 1F49     		ldr	r1, .L18+4
 2149 07bc FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2150              	.LVL138:
 2151              	.LBB890:
 2152              	.LBI890:
 2153              		.loc 3 182 7 is_stmt 1 view .LVU444
 2154              	.LBB891:
 2155              	.LBI891:
 2156              		.loc 4 89 7 view .LVU445
 2157              		.loc 4 89 7 is_stmt 0 view .LVU446
 2158              	.LBE891:
 2159              	.LBE890:
 2160              	.LBB892:
 2161              	.LBI892:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 2162              		.loc 3 164 7 is_stmt 1 view .LVU447
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 88


 2163              	.LBB893:
 2164              	.LBI893:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2165              		.loc 4 79 7 view .LVU448
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2166              		.loc 4 79 7 is_stmt 0 view .LVU449
 2167              	.LBE893:
 2168              	.LBE892:
  54:src/theory.cpp **** 
 2169              		.loc 7 54 102 view .LVU450
 2170 07c0 04F1F000 		add	r0, r4, #240
 2171 07c4 1D49     		ldr	r1, .L18+8
 2172 07c6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2173              	.LVL139:
 2174              	.LBB894:
 2175              	.LBI894:
 2176              		.loc 3 182 7 is_stmt 1 view .LVU451
 2177              	.LBB895:
 2178              	.LBI895:
 2179              		.loc 4 89 7 view .LVU452
 2180              		.loc 4 89 7 is_stmt 0 view .LVU453
 2181              	.LBE895:
 2182              	.LBE894:
 2183              	.LBB896:
 2184              	.LBI896:
 164:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/allocator.h **** 
 2185              		.loc 3 164 7 is_stmt 1 view .LVU454
 2186              	.LBB897:
 2187              	.LBI897:
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2188              		.loc 4 79 7 view .LVU455
  79:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/new_allocator.h **** 
 2189              		.loc 4 79 7 is_stmt 0 view .LVU456
 2190              	.LBE897:
 2191              	.LBE896:
  54:src/theory.cpp **** 
 2192              		.loc 7 54 102 view .LVU457
 2193 07ca 04F58470 		add	r0, r4, #264
 2194 07ce 1C49     		ldr	r1, .L18+12
 2195 07d0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
 2196              	.LVL140:
 2197              	.LBB898:
 2198              	.LBI898:
 2199              		.loc 3 182 7 is_stmt 1 view .LVU458
 2200              	.LBB899:
 2201              	.LBI899:
 2202              		.loc 4 89 7 view .LVU459
 2203              		.loc 4 89 7 is_stmt 0 view .LVU460
 2204              	.LBE899:
 2205              	.LBE898:
  54:src/theory.cpp **** 
 2206              		.loc 7 54 19 view .LVU461
 2207 07d4 1B4A     		ldr	r2, .L18+16
 2208 07d6 1C49     		ldr	r1, .L18+20
 2209 07d8 2046     		mov	r0, r4
 2210 07da FFF7FEFF 		bl	__aeabi_atexit
 2211              	.LVL141:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 89


 2212              		.loc 7 56 225 view .LVU462
 2213 07de 1B4A     		ldr	r2, .L18+24
 2214 07e0 1B4B     		ldr	r3, .L18+28
 2215 07e2 1268     		ldr	r2, [r2]
 2216 07e4 1B49     		ldr	r1, .L18+32
 2217 07e6 1C48     		ldr	r0, .L18+36
 2218 07e8 1A60     		str	r2, [r3]
 2219 07ea 0A68     		ldr	r2, [r1]
 2220 07ec 1B49     		ldr	r1, .L18+40
 2221 07ee 5A60     		str	r2, [r3, #4]
 2222 07f0 0268     		ldr	r2, [r0]
 2223 07f2 1B48     		ldr	r0, .L18+44
 2224 07f4 9A60     		str	r2, [r3, #8]
 2225 07f6 1B4A     		ldr	r2, .L18+48
 2226 07f8 1268     		ldr	r2, [r2]
 2227 07fa DA60     		str	r2, [r3, #12]
 2228 07fc 1A4A     		ldr	r2, .L18+52
 2229 07fe 1268     		ldr	r2, [r2]
 2230 0800 1A61     		str	r2, [r3, #16]
 2231 0802 0A68     		ldr	r2, [r1]
 2232 0804 5A61     		str	r2, [r3, #20]
 2233 0806 0268     		ldr	r2, [r0]
 2234 0808 9A61     		str	r2, [r3, #24]
 2235 080a 184A     		ldr	r2, .L18+56
 2236 080c 1268     		ldr	r2, [r2]
 2237 080e DA61     		str	r2, [r3, #28]
 2238 0810 DBF80020 		ldr	r2, [fp]
 2239 0814 1A62     		str	r2, [r3, #32]
 2240 0816 DAF80020 		ldr	r2, [r10]
 2241 081a 5A62     		str	r2, [r3, #36]
 2242 081c D9F80020 		ldr	r2, [r9]
 2243 0820 9A62     		str	r2, [r3, #40]
 2244 0822 D8F80020 		ldr	r2, [r8]
 2245 0826 DA62     		str	r2, [r3, #44]
 2246 0828 2A68     		ldr	r2, [r5]
 2247 082a 1A63     		str	r2, [r3, #48]
 2248              		.loc 7 56 226 view .LVU463
 2249 082c 2DB0     		add	sp, sp, #180
 2250              		.cfi_def_cfa_offset 36
 2251              		@ sp needed
 2252 082e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2253              	.L19:
 2254 0832 00BF     		.align	2
 2255              	.L18:
 2256 0834 52000000 		.word	.LC35
 2257 0838 55000000 		.word	.LC36
 2258 083c 57000000 		.word	.LC37
 2259 0840 5A000000 		.word	.LC38
 2260 0844 00000000 		.word	__dso_handle
 2261 0848 00000000 		.word	_ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED1Ev
 2262 084c 00000000 		.word	.LANCHOR2
 2263 0850 00000000 		.word	.LANCHOR27
 2264 0854 00000000 		.word	.LANCHOR4
 2265 0858 00000000 		.word	.LANCHOR5
 2266 085c 00000000 		.word	.LANCHOR11
 2267 0860 00000000 		.word	.LANCHOR13
 2268 0864 00000000 		.word	.LANCHOR7
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 90


 2269 0868 00000000 		.word	.LANCHOR9
 2270 086c 00000000 		.word	.LANCHOR15
 2271              		.cfi_endproc
 2272              	.LFE2471:
 2274              		.section	.text._ZN5ChordD2Ev,"ax",%progbits
 2275              		.align	1
 2276              		.global	_ZN5ChordD2Ev
 2277              		.syntax unified
 2278              		.thumb
 2279              		.thumb_func
 2281              	_ZN5ChordD2Ev:
 2282              	.LVL142:
 2283              	.LFB1980:
  19:src/theory.cpp **** {
 2284              		.loc 7 19 1 is_stmt 1 view -0
 2285              		.cfi_startproc
 2286              		@ args = 0, pretend = 0, frame = 0
 2287              		@ frame_needed = 0, uses_anonymous_args = 0
 2288              	.LBB900:
 2289              	.LBB901:
 2290              	.LBI901:
 670:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       { _M_dispose(); }
 2291              		.loc 2 670 7 view .LVU465
 2292              	.LBE901:
 2293              	.LBE900:
  19:src/theory.cpp **** {
 2294              		.loc 7 19 1 is_stmt 0 view .LVU466
 2295 0000 10B5     		push	{r4, lr}
 2296              		.cfi_def_cfa_offset 8
 2297              		.cfi_offset 4, -8
 2298              		.cfi_offset 14, -4
  19:src/theory.cpp **** {
 2299              		.loc 7 19 1 view .LVU467
 2300 0002 0446     		mov	r4, r0
 2301              	.LBB907:
 2302              	.LBB906:
 2303              	.LBB902:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 2304              		.loc 2 671 19 view .LVU468
 2305 0004 1C30     		adds	r0, r0, #28
 2306              	.LVL143:
 671:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h **** 
 2307              		.loc 2 671 19 view .LVU469
 2308 0006 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 2309              	.LVL144:
 2310              	.LBB903:
 2311              	.LBI903:
 158:/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/basic_string.h ****       {
 2312              		.loc 2 158 14 is_stmt 1 view .LVU470
 2313              	.LBB904:
 2314              	.LBI904:
 2315              		.loc 3 182 7 view .LVU471
 2316              	.LBB905:
 2317              	.LBI905:
 2318              		.loc 4 89 7 view .LVU472
 2319              		.loc 4 89 7 is_stmt 0 view .LVU473
 2320              	.LBE905:
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 91


 2321              	.LBE904:
 2322              	.LBE903:
 2323              	.LBE902:
 2324              	.LBE906:
 2325              	.LBE907:
  21:src/theory.cpp **** 
 2326              		.loc 7 21 1 view .LVU474
 2327 000a 2046     		mov	r0, r4
 2328 000c 10BD     		pop	{r4, pc}
  21:src/theory.cpp **** 
 2329              		.loc 7 21 1 view .LVU475
 2330              		.cfi_endproc
 2331              	.LFE1980:
 2333              		.global	_ZN5ChordD1Ev
 2334              		.thumb_set _ZN5ChordD1Ev,_ZN5ChordD2Ev
 2335              		.section	.text.startup._GLOBAL__sub_I__ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11ch
 2336              		.align	1
 2337              		.syntax unified
 2338              		.thumb
 2339              		.thumb_func
 2341              	_GLOBAL__sub_I__ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_If
 2342              	.LFB2467:
 2343              		.loc 7 56 226 is_stmt 1 view -0
 2344              		.cfi_startproc
 2345              		@ args = 0, pretend = 0, frame = 0
 2346              		@ frame_needed = 0, uses_anonymous_args = 0
 2347              		@ link register save eliminated.
 2348              		.loc 7 56 226 is_stmt 0 view .LVU477
 2349 0000 FFF7FEBF 		b	_Z41__static_initialization_and_destruction_0ii.constprop.0
 2350              	.LVL145:
 2351              		.cfi_endproc
 2352              	.LFE2467:
 2354              		.section	.init_array,"aw",%init_array
 2355              		.align	2
 2356 0000 00000000 		.word	_GLOBAL__sub_I__ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcE
 2357              		.global	chordList
 2358              		.global	_Z16noteDisplayNamesB5cxx11
 2359              		.global	augmentedChord
 2360              		.global	flat13chord
 2361              		.global	dominantSharp11chord
 2362              		.global	sharp11chord
 2363              		.global	sharp9chord
 2364              		.global	flat9chord
 2365              		.global	diminishedChord
 2366              		.global	halfDiminishedChord
 2367              		.global	dominantChord
 2368              		.global	minor6Chord
 2369              		.global	major6Chord
 2370              		.global	minorChord
 2371              		.global	majorChord
 2372              		.global	augmentedScale
 2373              		.global	alteredScale
 2374              		.global	diminishedScale
 2375              		.global	locrianScale
 2376              		.global	aeoleanScale
 2377              		.global	mixolydianFlat13Scale
 2378              		.global	mixolydianFlat2Scale
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 92


 2379              		.global	mixolydianScale
 2380              		.global	lydianDominantScale
 2381              		.global	lydianScale
 2382              		.global	phrygianScale
 2383              		.global	dorianScale
 2384              		.global	ionianScale
 2385              		.section	.rodata
 2386              		.align	2
 2387              		.set	.LANCHOR0,. + 0
 2388              	.LC0:
 2389 0000 00000000 		.word	0
 2390 0004 04000000 		.word	4
 2391 0008 07000000 		.word	7
 2392 000c 0B000000 		.word	11
 2393 0010 0E000000 		.word	14
 2394 0014 11000000 		.word	17
 2395 0018 15000000 		.word	21
 2396              	.LC1:
 2397 001c 00000000 		.word	0
 2398 0020 03000000 		.word	3
 2399 0024 07000000 		.word	7
 2400 0028 0A000000 		.word	10
 2401 002c 0E000000 		.word	14
 2402 0030 11000000 		.word	17
 2403 0034 15000000 		.word	21
 2404              	.LC2:
 2405 0038 00000000 		.word	0
 2406 003c 04000000 		.word	4
 2407 0040 07000000 		.word	7
 2408 0044 09000000 		.word	9
 2409 0048 0E000000 		.word	14
 2410 004c 11000000 		.word	17
 2411 0050 15000000 		.word	21
 2412              	.LC3:
 2413 0054 00000000 		.word	0
 2414 0058 03000000 		.word	3
 2415 005c 07000000 		.word	7
 2416 0060 09000000 		.word	9
 2417 0064 0E000000 		.word	14
 2418 0068 11000000 		.word	17
 2419 006c 15000000 		.word	21
 2420              	.LC4:
 2421 0070 00000000 		.word	0
 2422 0074 04000000 		.word	4
 2423 0078 07000000 		.word	7
 2424 007c 0A000000 		.word	10
 2425 0080 0E000000 		.word	14
 2426 0084 11000000 		.word	17
 2427 0088 15000000 		.word	21
 2428              	.LC5:
 2429 008c 00000000 		.word	0
 2430 0090 03000000 		.word	3
 2431 0094 06000000 		.word	6
 2432 0098 0A000000 		.word	10
 2433 009c 0E000000 		.word	14
 2434 00a0 11000000 		.word	17
 2435 00a4 15000000 		.word	21
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 93


 2436              	.LC6:
 2437 00a8 00000000 		.word	0
 2438 00ac 03000000 		.word	3
 2439 00b0 06000000 		.word	6
 2440 00b4 09000000 		.word	9
 2441 00b8 0C000000 		.word	12
 2442 00bc 0F000000 		.word	15
 2443 00c0 15000000 		.word	21
 2444              	.LC7:
 2445 00c4 00000000 		.word	0
 2446 00c8 04000000 		.word	4
 2447 00cc 07000000 		.word	7
 2448 00d0 0A000000 		.word	10
 2449 00d4 0D000000 		.word	13
 2450 00d8 11000000 		.word	17
 2451 00dc 15000000 		.word	21
 2452              	.LC8:
 2453 00e0 00000000 		.word	0
 2454 00e4 04000000 		.word	4
 2455 00e8 07000000 		.word	7
 2456 00ec 0A000000 		.word	10
 2457 00f0 0F000000 		.word	15
 2458 00f4 11000000 		.word	17
 2459 00f8 15000000 		.word	21
 2460              	.LC9:
 2461 00fc 00000000 		.word	0
 2462 0100 04000000 		.word	4
 2463 0104 07000000 		.word	7
 2464 0108 0B000000 		.word	11
 2465 010c 0E000000 		.word	14
 2466 0110 12000000 		.word	18
 2467 0114 15000000 		.word	21
 2468              	.LC10:
 2469 0118 00000000 		.word	0
 2470 011c 04000000 		.word	4
 2471 0120 07000000 		.word	7
 2472 0124 0A000000 		.word	10
 2473 0128 0E000000 		.word	14
 2474 012c 12000000 		.word	18
 2475 0130 15000000 		.word	21
 2476              	.LC11:
 2477 0134 00000000 		.word	0
 2478 0138 04000000 		.word	4
 2479 013c 07000000 		.word	7
 2480 0140 0A000000 		.word	10
 2481 0144 0E000000 		.word	14
 2482 0148 11000000 		.word	17
 2483 014c 14000000 		.word	20
 2484              	.LC12:
 2485 0150 00000000 		.word	0
 2486 0154 04000000 		.word	4
 2487 0158 08000000 		.word	8
 2488 015c 0A000000 		.word	10
 2489 0160 0E000000 		.word	14
 2490 0164 11000000 		.word	17
 2491 0168 15000000 		.word	21
 2492              		.section	.bss._Z16noteDisplayNamesB5cxx11,"aw",%nobits
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 94


 2493              		.align	2
 2494              		.set	.LANCHOR26,. + 0
 2497              	_Z16noteDisplayNamesB5cxx11:
 2498 0000 00000000 		.space	288
 2498      00000000 
 2498      00000000 
 2498      00000000 
 2498      00000000 
 2499              		.section	.bss.augmentedChord,"aw",%nobits
 2500              		.align	2
 2501              		.set	.LANCHOR25,. + 0
 2504              	augmentedChord:
 2505 0000 00000000 		.space	4
 2506              		.section	.bss.chordList,"aw",%nobits
 2507              		.align	2
 2508              		.set	.LANCHOR27,. + 0
 2511              	chordList:
 2512 0000 00000000 		.space	56
 2512      00000000 
 2512      00000000 
 2512      00000000 
 2512      00000000 
 2513              		.section	.bss.diminishedChord,"aw",%nobits
 2514              		.align	2
 2515              		.set	.LANCHOR13,. + 0
 2518              	diminishedChord:
 2519 0000 00000000 		.space	4
 2520              		.section	.bss.dominantChord,"aw",%nobits
 2521              		.align	2
 2522              		.set	.LANCHOR9,. + 0
 2525              	dominantChord:
 2526 0000 00000000 		.space	4
 2527              		.section	.bss.dominantSharp11chord,"aw",%nobits
 2528              		.align	2
 2529              		.set	.LANCHOR21,. + 0
 2532              	dominantSharp11chord:
 2533 0000 00000000 		.space	4
 2534              		.section	.bss.flat13chord,"aw",%nobits
 2535              		.align	2
 2536              		.set	.LANCHOR23,. + 0
 2539              	flat13chord:
 2540 0000 00000000 		.space	4
 2541              		.section	.bss.flat9chord,"aw",%nobits
 2542              		.align	2
 2543              		.set	.LANCHOR15,. + 0
 2546              	flat9chord:
 2547 0000 00000000 		.space	4
 2548              		.section	.bss.halfDiminishedChord,"aw",%nobits
 2549              		.align	2
 2550              		.set	.LANCHOR11,. + 0
 2553              	halfDiminishedChord:
 2554 0000 00000000 		.space	4
 2555              		.section	.bss.major6Chord,"aw",%nobits
 2556              		.align	2
 2557              		.set	.LANCHOR5,. + 0
 2560              	major6Chord:
 2561 0000 00000000 		.space	4
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 95


 2562              		.section	.bss.majorChord,"aw",%nobits
 2563              		.align	2
 2564              		.set	.LANCHOR2,. + 0
 2567              	majorChord:
 2568 0000 00000000 		.space	4
 2569              		.section	.bss.minor6Chord,"aw",%nobits
 2570              		.align	2
 2571              		.set	.LANCHOR7,. + 0
 2574              	minor6Chord:
 2575 0000 00000000 		.space	4
 2576              		.section	.bss.minorChord,"aw",%nobits
 2577              		.align	2
 2578              		.set	.LANCHOR4,. + 0
 2581              	minorChord:
 2582 0000 00000000 		.space	4
 2583              		.section	.bss.sharp11chord,"aw",%nobits
 2584              		.align	2
 2585              		.set	.LANCHOR19,. + 0
 2588              	sharp11chord:
 2589 0000 00000000 		.space	4
 2590              		.section	.bss.sharp9chord,"aw",%nobits
 2591              		.align	2
 2592              		.set	.LANCHOR17,. + 0
 2595              	sharp9chord:
 2596 0000 00000000 		.space	4
 2597              		.section	.data.aeoleanScale,"aw"
 2598              		.align	2
 2599              		.set	.LANCHOR3,. + 0
 2602              	aeoleanScale:
 2603 0000 0000803F 		.word	1065353216
 2604 0004 00000000 		.word	0
 2605 0008 CDCCCC3D 		.word	1036831949
 2606 000c 0000003F 		.word	1056964608
 2607 0010 00000000 		.word	0
 2608 0014 9A99993E 		.word	1050253722
 2609 0018 00000000 		.word	0
 2610 001c 3333333F 		.word	1060320051
 2611 0020 00000000 		.word	0
 2612 0024 9A99993E 		.word	1050253722
 2613 0028 00000000 		.word	0
 2614 002c 0000003F 		.word	1056964608
 2615              		.section	.data.alteredScale,"aw"
 2616              		.align	2
 2617              		.set	.LANCHOR16,. + 0
 2620              	alteredScale:
 2621 0000 0000803F 		.word	1065353216
 2622 0004 9A99993E 		.word	1050253722
 2623 0008 00000000 		.word	0
 2624 000c 0000003F 		.word	1056964608
 2625 0010 CDCCCC3D 		.word	1036831949
 2626 0014 00000000 		.word	0
 2627 0018 CDCC4C3F 		.word	1061997773
 2628 001c 00000000 		.word	0
 2629 0020 CDCCCC3E 		.word	1053609165
 2630 0024 00000000 		.word	0
 2631 0028 9A99193F 		.word	1058642330
 2632 002c 00000000 		.word	0
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 96


 2633              		.section	.data.augmentedScale,"aw"
 2634              		.align	2
 2635              		.set	.LANCHOR24,. + 0
 2638              	augmentedScale:
 2639 0000 0000803F 		.word	1065353216
 2640 0004 00000000 		.word	0
 2641 0008 CDCC4C3E 		.word	1045220557
 2642 000c 00000000 		.word	0
 2643 0010 0000003F 		.word	1056964608
 2644 0014 00000000 		.word	0
 2645 0018 00000000 		.word	0
 2646 001c CDCC4C3E 		.word	1045220557
 2647 0020 CDCC4C3F 		.word	1061997773
 2648 0024 00000000 		.word	0
 2649 0028 00000000 		.word	0
 2650 002c CDCC4C3E 		.word	1045220557
 2651              		.section	.data.diminishedScale,"aw"
 2652              		.align	2
 2653              		.set	.LANCHOR12,. + 0
 2656              	diminishedScale:
 2657 0000 0000803F 		.word	1065353216
 2658 0004 00000000 		.word	0
 2659 0008 9A99193F 		.word	1058642330
 2660 000c CDCC4C3F 		.word	1061997773
 2661 0010 00000000 		.word	0
 2662 0014 9A99193F 		.word	1058642330
 2663 0018 CDCC4C3F 		.word	1061997773
 2664 001c 00000000 		.word	0
 2665 0020 9A99193F 		.word	1058642330
 2666 0024 CDCC4C3F 		.word	1061997773
 2667 0028 00000000 		.word	0
 2668 002c 9A99193F 		.word	1058642330
 2669              		.section	.data.dorianScale,"aw"
 2670              		.align	2
 2671              		.set	.LANCHOR6,. + 0
 2674              	dorianScale:
 2675 0000 0000803F 		.word	1065353216
 2676 0004 00000000 		.word	0
 2677 0008 0000803F 		.word	1065353216
 2678 000c 0000803F 		.word	1065353216
 2679 0010 00000000 		.word	0
 2680 0014 0000803F 		.word	1065353216
 2681 0018 00000000 		.word	0
 2682 001c 0000803F 		.word	1065353216
 2683 0020 00000000 		.word	0
 2684 0024 0000803F 		.word	1065353216
 2685 0028 0000803F 		.word	1065353216
 2686 002c 00000000 		.word	0
 2687              		.section	.data.ionianScale,"aw"
 2688              		.align	2
 2689              		.set	.LANCHOR1,. + 0
 2692              	ionianScale:
 2693 0000 0000803F 		.word	1065353216
 2694 0004 00000000 		.word	0
 2695 0008 CDCCCC3D 		.word	1036831949
 2696 000c 00000000 		.word	0
 2697 0010 0000003F 		.word	1056964608
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 97


 2698 0014 9A99993E 		.word	1050253722
 2699 0018 00000000 		.word	0
 2700 001c 3333333F 		.word	1060320051
 2701 0020 00000000 		.word	0
 2702 0024 9A99993E 		.word	1050253722
 2703 0028 00000000 		.word	0
 2704 002c 0000003F 		.word	1056964608
 2705              		.section	.data.locrianScale,"aw"
 2706              		.align	2
 2707              		.set	.LANCHOR10,. + 0
 2710              	locrianScale:
 2711 0000 0000803F 		.word	1065353216
 2712 0004 CDCCCC3D 		.word	1036831949
 2713 0008 00000000 		.word	0
 2714 000c 0000003F 		.word	1056964608
 2715 0010 00000000 		.word	0
 2716 0014 9A99993E 		.word	1050253722
 2717 0018 3333333F 		.word	1060320051
 2718 001c 00000000 		.word	0
 2719 0020 9A99993E 		.word	1050253722
 2720 0024 00000000 		.word	0
 2721 0028 0000003F 		.word	1056964608
 2722 002c 00000000 		.word	0
 2723              		.section	.data.lydianDominantScale,"aw"
 2724              		.align	2
 2725              		.set	.LANCHOR20,. + 0
 2728              	lydianDominantScale:
 2729 0000 0000803F 		.word	1065353216
 2730 0004 00000000 		.word	0
 2731 0008 CDCCCC3D 		.word	1036831949
 2732 000c 00000000 		.word	0
 2733 0010 0000003F 		.word	1056964608
 2734 0014 00000000 		.word	0
 2735 0018 3333333F 		.word	1060320051
 2736 001c 3333333F 		.word	1060320051
 2737 0020 00000000 		.word	0
 2738 0024 9A99993E 		.word	1050253722
 2739 0028 9A99193F 		.word	1058642330
 2740 002c 00000000 		.word	0
 2741              		.section	.data.lydianScale,"aw"
 2742              		.align	2
 2743              		.set	.LANCHOR18,. + 0
 2746              	lydianScale:
 2747 0000 0000803F 		.word	1065353216
 2748 0004 00000000 		.word	0
 2749 0008 CDCCCC3D 		.word	1036831949
 2750 000c 00000000 		.word	0
 2751 0010 0000003F 		.word	1056964608
 2752 0014 00000000 		.word	0
 2753 0018 3333333F 		.word	1060320051
 2754 001c 3333333F 		.word	1060320051
 2755 0020 00000000 		.word	0
 2756 0024 9A99993E 		.word	1050253722
 2757 0028 00000000 		.word	0
 2758 002c 9A99193F 		.word	1058642330
 2759              		.section	.data.mixolydianFlat13Scale,"aw"
 2760              		.align	2
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 98


 2761              		.set	.LANCHOR22,. + 0
 2764              	mixolydianFlat13Scale:
 2765 0000 0000803F 		.word	1065353216
 2766 0004 00000000 		.word	0
 2767 0008 CDCCCC3D 		.word	1036831949
 2768 000c 00000000 		.word	0
 2769 0010 0000003F 		.word	1056964608
 2770 0014 0000803F 		.word	1065353216
 2771 0018 00000000 		.word	0
 2772 001c CDCC4C3F 		.word	1061997773
 2773 0020 3333333F 		.word	1060320051
 2774 0024 00000000 		.word	0
 2775 0028 9A99193F 		.word	1058642330
 2776 002c 00000000 		.word	0
 2777              		.section	.data.mixolydianFlat2Scale,"aw"
 2778              		.align	2
 2779              		.set	.LANCHOR14,. + 0
 2782              	mixolydianFlat2Scale:
 2783 0000 0000803F 		.word	1065353216
 2784 0004 3333333F 		.word	1060320051
 2785 0008 00000000 		.word	0
 2786 000c 00000000 		.word	0
 2787 0010 0000003F 		.word	1056964608
 2788 0014 CDCC4C3E 		.word	1045220557
 2789 0018 00000000 		.word	0
 2790 001c 3333333F 		.word	1060320051
 2791 0020 00000000 		.word	0
 2792 0024 CDCC4C3E 		.word	1045220557
 2793 0028 9A99193F 		.word	1058642330
 2794 002c 00000000 		.word	0
 2795              		.section	.data.mixolydianScale,"aw"
 2796              		.align	2
 2797              		.set	.LANCHOR8,. + 0
 2800              	mixolydianScale:
 2801 0000 0000803F 		.word	1065353216
 2802 0004 00000000 		.word	0
 2803 0008 CDCCCC3D 		.word	1036831949
 2804 000c 00000000 		.word	0
 2805 0010 0000003F 		.word	1056964608
 2806 0014 9A99993E 		.word	1050253722
 2807 0018 00000000 		.word	0
 2808 001c 3333333F 		.word	1060320051
 2809 0020 00000000 		.word	0
 2810 0024 9A99993E 		.word	1050253722
 2811 0028 0000003F 		.word	1056964608
 2812 002c 00000000 		.word	0
 2813              		.section	.data.phrygianScale,"aw"
 2814              		.align	2
 2817              	phrygianScale:
 2818 0000 0000803F 		.word	1065353216
 2819 0004 0000803F 		.word	1065353216
 2820 0008 00000000 		.word	0
 2821 000c 0000803F 		.word	1065353216
 2822 0010 00000000 		.word	0
 2823 0014 0000803F 		.word	1065353216
 2824 0018 00000000 		.word	0
 2825 001c 0000803F 		.word	1065353216
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 99


 2826 0020 0000803F 		.word	1065353216
 2827 0024 00000000 		.word	0
 2828 0028 0000803F 		.word	1065353216
 2829 002c 00000000 		.word	0
 2830              		.text
 2831              	.Letext0:
 2832              		.file 9 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/machine/_default_types.h"
 2833              		.file 10 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_stdint.h"
 2834              		.file 11 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdint.h"
 2835              		.file 12 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stddef.h"
 2836              		.file 13 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cmath"
 2837              		.file 14 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/std_abs.h"
 2838              		.file 15 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/arm-none-eabi/thumb/v
 2839              		.file 16 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/type_traits"
 2840              		.file 17 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_pair.h"
 2841              		.file 18 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator_bas
 2842              		.file 19 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/debug/debug.h"
 2843              		.file 20 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cwchar"
 2844              		.file 21 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdint"
 2845              		.file 22 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/exception_ptr.h"
 2846              		.file 23 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/clocale"
 2847              		.file 24 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdlib"
 2848              		.file 25 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/cstdio"
 2849              		.file 26 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/alloc_traits.h"
 2850              		.file 27 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/initializer_list"
 2851              		.file 28 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stringfwd.h"
 2852              		.file 29 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/ptr_traits.h"
 2853              		.file 30 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator_bas
 2854              		.file 31 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/predefined_ops.h
 2855              		.file 32 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/alloc_traits.h"
 2856              		.file 33 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/stl_iterator.h"
 2857              		.file 34 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/ext/type_traits.h"
 2858              		.file 35 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/_types.h"
 2859              		.file 36 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/reent.h"
 2860              		.file 37 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/sys/lock.h"
 2861              		.file 38 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/math.h"
 2862              		.file 39 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdlib.h"
 2863              		.file 40 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/math.h"
 2864              		.file 41 "/Library/DaisyToolchain/0.2.0/arm/lib/gcc/arm-none-eabi/10.3.1/include/stdarg.h"
 2865              		.file 42 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/wchar.h"
 2866              		.file 43 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/locale.h"
 2867              		.file 44 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/stdio.h"
 2868              		.file 45 "src/theory.hpp"
 2869              		.file 46 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/bits/functexcept.h"
 2870              		.file 47 "/Library/DaisyToolchain/0.2.0/arm/arm-none-eabi/include/c++/10.3.1/new"
 2871              		.file 48 "<built-in>"
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 100


DEFINED SYMBOLS
                            *ABS*:0000000000000000 theory.cpp
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:19     .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED2Ev:0000000000000000 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:25     .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED2Ev:0000000000000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED2Ev
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:25     .text._ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED2Ev:0000000000000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED1Ev
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:99     .text.startup._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:0000000000000000 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:104    .text.startup._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:311    .text.startup._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EPKcRKS3_.constprop.0.isra.0:000000000000004c $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:319    .text._ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE:0000000000000000 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:325    .text._ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE:0000000000000000 _ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:325    .text._ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE:0000000000000000 _ZN5ChordC1ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:570    .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000000 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:575    .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000000 _Z41__static_initialization_and_destruction_0ii.constprop.0
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:1230   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000364 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:1255   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000000003c4 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2100   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000750 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2125   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:00000000000007b0 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2256   .text.startup._Z41__static_initialization_and_destruction_0ii.constprop.0:0000000000000834 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2275   .text._ZN5ChordD2Ev:0000000000000000 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2281   .text._ZN5ChordD2Ev:0000000000000000 _ZN5ChordD2Ev
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2281   .text._ZN5ChordD2Ev:0000000000000000 _ZN5ChordD1Ev
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2336   .text.startup._GLOBAL__sub_I__ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE:0000000000000000 $t
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2341   .text.startup._GLOBAL__sub_I__ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE:0000000000000000 _GLOBAL__sub_I__ZN5ChordC2ESt5arrayIiLj7EENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES0_IfLj12EE
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2355   .init_array:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2511   .bss.chordList:0000000000000000 chordList
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2497   .bss._Z16noteDisplayNamesB5cxx11:0000000000000000 _Z16noteDisplayNamesB5cxx11
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2504   .bss.augmentedChord:0000000000000000 augmentedChord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2539   .bss.flat13chord:0000000000000000 flat13chord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2532   .bss.dominantSharp11chord:0000000000000000 dominantSharp11chord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2588   .bss.sharp11chord:0000000000000000 sharp11chord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2595   .bss.sharp9chord:0000000000000000 sharp9chord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2546   .bss.flat9chord:0000000000000000 flat9chord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2518   .bss.diminishedChord:0000000000000000 diminishedChord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2553   .bss.halfDiminishedChord:0000000000000000 halfDiminishedChord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2525   .bss.dominantChord:0000000000000000 dominantChord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2574   .bss.minor6Chord:0000000000000000 minor6Chord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2560   .bss.major6Chord:0000000000000000 major6Chord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2581   .bss.minorChord:0000000000000000 minorChord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2567   .bss.majorChord:0000000000000000 majorChord
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2638   .data.augmentedScale:0000000000000000 augmentedScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2620   .data.alteredScale:0000000000000000 alteredScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2656   .data.diminishedScale:0000000000000000 diminishedScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2710   .data.locrianScale:0000000000000000 locrianScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2602   .data.aeoleanScale:0000000000000000 aeoleanScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2764   .data.mixolydianFlat13Scale:0000000000000000 mixolydianFlat13Scale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2782   .data.mixolydianFlat2Scale:0000000000000000 mixolydianFlat2Scale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2800   .data.mixolydianScale:0000000000000000 mixolydianScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2728   .data.lydianDominantScale:0000000000000000 lydianDominantScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2746   .data.lydianScale:0000000000000000 lydianScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2817   .data.phrygianScale:0000000000000000 phrygianScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2674   .data.dorianScale:0000000000000000 dorianScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2692   .data.ionianScale:0000000000000000 ionianScale
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2386   .rodata:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2493   .bss._Z16noteDisplayNamesB5cxx11:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2500   .bss.augmentedChord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2507   .bss.chordList:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2514   .bss.diminishedChord:0000000000000000 $d
ARM GAS  /var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s 			page 101


/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2521   .bss.dominantChord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2528   .bss.dominantSharp11chord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2535   .bss.flat13chord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2542   .bss.flat9chord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2549   .bss.halfDiminishedChord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2556   .bss.major6Chord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2563   .bss.majorChord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2570   .bss.minor6Chord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2577   .bss.minorChord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2584   .bss.sharp11chord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2591   .bss.sharp9chord:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2598   .data.aeoleanScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2616   .data.alteredScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2634   .data.augmentedScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2652   .data.diminishedScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2670   .data.dorianScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2688   .data.ionianScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2706   .data.locrianScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2724   .data.lydianDominantScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2742   .data.lydianScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2760   .data.mixolydianFlat13Scale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2778   .data.mixolydianFlat2Scale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2796   .data.mixolydianScale:0000000000000000 $d
/var/folders/cl/r97w26fn2f10y5b55m18gt9w0000gn/T//cc9MIsRp.s:2814   .data.phrygianScale:0000000000000000 $d
                           .group:0000000000000000 _ZNSt5arrayINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEELj12EED5Ev

UNDEFINED SYMBOLS
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_Znwj
__aeabi_atexit
__dso_handle
